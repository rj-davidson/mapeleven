// Code generated by ent, DO NOT EDIT.

package coach

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the coach type in the database.
	Label = "coach"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFootballApiId holds the string denoting the footballapiid field in the database.
	FieldFootballApiId = "football_api_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPhoto holds the string denoting the photo field in the database.
	FieldPhoto = "photo"
	// FieldLastUpdated holds the string denoting the lastupdated field in the database.
	FieldLastUpdated = "last_updated"
	// Table holds the table name of the coach in the database.
	Table = "coaches"
)

// Columns holds all SQL columns for coach fields.
var Columns = []string{
	FieldID,
	FieldFootballApiId,
	FieldName,
	FieldPhoto,
	FieldLastUpdated,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLastUpdated holds the default value on creation for the "lastUpdated" field.
	DefaultLastUpdated func() time.Time
	// UpdateDefaultLastUpdated holds the default value on update for the "lastUpdated" field.
	UpdateDefaultLastUpdated func() time.Time
)

// Order defines the ordering method for the Coach queries.
type Order func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFootballApiId orders the results by the footballApiId field.
func ByFootballApiId(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldFootballApiId, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByPhoto orders the results by the photo field.
func ByPhoto(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldPhoto, opts...).ToFunc()
}

// ByLastUpdated orders the results by the lastUpdated field.
func ByLastUpdated(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldLastUpdated, opts...).ToFunc()
}
