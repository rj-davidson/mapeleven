// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BirthsColumns holds the columns for the "births" table.
	BirthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "place", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
	}
	// BirthsTable holds the schema information for the "births" table.
	BirthsTable = &schema.Table{
		Name:       "births",
		Columns:    BirthsColumns,
		PrimaryKey: []*schema.Column{BirthsColumns[0]},
	}
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "api_football_id", Type: field.TypeInt, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Size: 3},
		{Name: "founded", Type: field.TypeInt},
		{Name: "national", Type: field.TypeBool},
		{Name: "logo", Type: field.TypeString},
		{Name: "country_clubs", Type: field.TypeInt, Nullable: true},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:       "clubs",
		Columns:    ClubsColumns,
		PrimaryKey: []*schema.Column{ClubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "clubs_countries_clubs",
				Columns:    []*schema.Column{ClubsColumns[8]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Size: 3},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "flag", Type: field.TypeString},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// FixturesColumns holds the columns for the "fixtures" table.
	FixturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "api_football_id", Type: field.TypeInt, Unique: true},
		{Name: "referee", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "elapsed", Type: field.TypeInt, Nullable: true},
		{Name: "round", Type: field.TypeInt, Nullable: true},
		{Name: "status", Type: field.TypeString},
		{Name: "home_team_score", Type: field.TypeInt, Nullable: true},
		{Name: "away_team_score", Type: field.TypeInt, Nullable: true},
		{Name: "season_fixtures", Type: field.TypeInt},
		{Name: "team_home_fixtures", Type: field.TypeInt},
		{Name: "team_away_fixtures", Type: field.TypeInt},
	}
	// FixturesTable holds the schema information for the "fixtures" table.
	FixturesTable = &schema.Table{
		Name:       "fixtures",
		Columns:    FixturesColumns,
		PrimaryKey: []*schema.Column{FixturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixtures_seasons_fixtures",
				Columns:    []*schema.Column{FixturesColumns[11]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixtures_teams_homeFixtures",
				Columns:    []*schema.Column{FixturesColumns[12]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixtures_teams_awayFixtures",
				Columns:    []*schema.Column{FixturesColumns[13]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LeaguesColumns holds the columns for the "leagues" table.
	LeaguesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "football_api_id", Type: field.TypeInt, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"League", "Cup", "Tournament", "Friendly"}},
		{Name: "logo", Type: field.TypeString},
		{Name: "country_leagues", Type: field.TypeInt, Nullable: true},
	}
	// LeaguesTable holds the schema information for the "leagues" table.
	LeaguesTable = &schema.Table{
		Name:       "leagues",
		Columns:    LeaguesColumns,
		PrimaryKey: []*schema.Column{LeaguesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "leagues_countries_leagues",
				Columns:    []*schema.Column{LeaguesColumns[6]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayersColumns holds the columns for the "players" table.
	PlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "firstname", Type: field.TypeString},
		{Name: "lastname", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt},
		{Name: "height", Type: field.TypeFloat64},
		{Name: "weight", Type: field.TypeFloat64},
		{Name: "injured", Type: field.TypeBool},
		{Name: "photo", Type: field.TypeString},
		{Name: "birth_player", Type: field.TypeInt, Nullable: true},
		{Name: "country_players", Type: field.TypeInt, Nullable: true},
	}
	// PlayersTable holds the schema information for the "players" table.
	PlayersTable = &schema.Table{
		Name:       "players",
		Columns:    PlayersColumns,
		PrimaryKey: []*schema.Column{PlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "players_births_player",
				Columns:    []*schema.Column{PlayersColumns[10]},
				RefColumns: []*schema.Column{BirthsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "players_countries_players",
				Columns:    []*schema.Column{PlayersColumns[11]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SeasonsColumns holds the columns for the "seasons" table.
	SeasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "year", Type: field.TypeInt},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "current", Type: field.TypeBool},
		{Name: "league_season", Type: field.TypeInt, Nullable: true},
	}
	// SeasonsTable holds the schema information for the "seasons" table.
	SeasonsTable = &schema.Table{
		Name:       "seasons",
		Columns:    SeasonsColumns,
		PrimaryKey: []*schema.Column{SeasonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seasons_leagues_season",
				Columns:    []*schema.Column{SeasonsColumns[6]},
				RefColumns: []*schema.Column{LeaguesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StandingsColumns holds the columns for the "standings" table.
	StandingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rank", Type: field.TypeInt},
		{Name: "points", Type: field.TypeInt, Default: 0},
		{Name: "goals_diff", Type: field.TypeInt, Default: 0},
		{Name: "group", Type: field.TypeString, Default: ""},
		{Name: "form", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "all_played", Type: field.TypeInt},
		{Name: "all_win", Type: field.TypeInt},
		{Name: "all_draw", Type: field.TypeInt},
		{Name: "all_lose", Type: field.TypeInt},
		{Name: "all_goals_for", Type: field.TypeInt},
		{Name: "all_goals_against", Type: field.TypeInt},
		{Name: "home_played", Type: field.TypeInt},
		{Name: "home_win", Type: field.TypeInt},
		{Name: "home_draw", Type: field.TypeInt},
		{Name: "home_lose", Type: field.TypeInt},
		{Name: "home_goals_for", Type: field.TypeInt},
		{Name: "home_goals_against", Type: field.TypeInt},
		{Name: "away_played", Type: field.TypeInt},
		{Name: "away_win", Type: field.TypeInt},
		{Name: "away_draw", Type: field.TypeInt},
		{Name: "away_lose", Type: field.TypeInt},
		{Name: "away_goals_for", Type: field.TypeInt},
		{Name: "away_goals_against", Type: field.TypeInt},
		{Name: "last_updated", Type: field.TypeTime},
		{Name: "season_standings", Type: field.TypeInt},
		{Name: "team_standings", Type: field.TypeInt},
	}
	// StandingsTable holds the schema information for the "standings" table.
	StandingsTable = &schema.Table{
		Name:       "standings",
		Columns:    StandingsColumns,
		PrimaryKey: []*schema.Column{StandingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "standings_seasons_standings",
				Columns:    []*schema.Column{StandingsColumns[27]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "standings_teams_standings",
				Columns:    []*schema.Column{StandingsColumns[28]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsBiggestsColumns holds the columns for the "ts_biggests" table.
	TsBiggestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "streak_wins", Type: field.TypeInt, Nullable: true},
		{Name: "streak_losses", Type: field.TypeInt, Nullable: true},
		{Name: "streak_draws", Type: field.TypeInt, Nullable: true},
		{Name: "wins_home", Type: field.TypeString, Nullable: true},
		{Name: "wins_away", Type: field.TypeString, Nullable: true},
		{Name: "losses_home", Type: field.TypeString, Nullable: true},
		{Name: "losses_away", Type: field.TypeString, Nullable: true},
		{Name: "goals_for_home", Type: field.TypeInt, Nullable: true},
		{Name: "goals_for_away", Type: field.TypeInt, Nullable: true},
		{Name: "goals_against_home", Type: field.TypeInt, Nullable: true},
		{Name: "goals_against_away", Type: field.TypeInt, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_biggest_stats", Type: field.TypeInt, Unique: true},
	}
	// TsBiggestsTable holds the schema information for the "ts_biggests" table.
	TsBiggestsTable = &schema.Table{
		Name:       "ts_biggests",
		Columns:    TsBiggestsColumns,
		PrimaryKey: []*schema.Column{TsBiggestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_biggests_teams_biggest_stats",
				Columns:    []*schema.Column{TsBiggestsColumns[13]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsCardsColumns holds the columns for the "ts_cards" table.
	TsCardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "yellow0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_cards_stats", Type: field.TypeInt, Unique: true},
	}
	// TsCardsTable holds the schema information for the "ts_cards" table.
	TsCardsTable = &schema.Table{
		Name:       "ts_cards",
		Columns:    TsCardsColumns,
		PrimaryKey: []*schema.Column{TsCardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_cards_teams_cards_stats",
				Columns:    []*schema.Column{TsCardsColumns[34]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsCleanSheetsColumns holds the columns for the "ts_clean_sheets" table.
	TsCleanSheetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_clean_sheet_stats", Type: field.TypeInt, Unique: true},
	}
	// TsCleanSheetsTable holds the schema information for the "ts_clean_sheets" table.
	TsCleanSheetsTable = &schema.Table{
		Name:       "ts_clean_sheets",
		Columns:    TsCleanSheetsColumns,
		PrimaryKey: []*schema.Column{TsCleanSheetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_clean_sheets_teams_clean_sheet_stats",
				Columns:    []*schema.Column{TsCleanSheetsColumns[5]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsFailedToScoresColumns holds the columns for the "ts_failed_to_scores" table.
	TsFailedToScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_failed_to_score_stats", Type: field.TypeInt, Unique: true},
	}
	// TsFailedToScoresTable holds the schema information for the "ts_failed_to_scores" table.
	TsFailedToScoresTable = &schema.Table{
		Name:       "ts_failed_to_scores",
		Columns:    TsFailedToScoresColumns,
		PrimaryKey: []*schema.Column{TsFailedToScoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_failed_to_scores_teams_failed_to_score_stats",
				Columns:    []*schema.Column{TsFailedToScoresColumns[5]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsFixturesColumns holds the columns for the "ts_fixtures" table.
	TsFixturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "played_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "played_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "played_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_fixtures_stats", Type: field.TypeInt, Unique: true},
	}
	// TsFixturesTable holds the schema information for the "ts_fixtures" table.
	TsFixturesTable = &schema.Table{
		Name:       "ts_fixtures",
		Columns:    TsFixturesColumns,
		PrimaryKey: []*schema.Column{TsFixturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_fixtures_teams_fixtures_stats",
				Columns:    []*schema.Column{TsFixturesColumns[14]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsGoalsColumns holds the columns for the "ts_goals" table.
	TsGoalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "goals_for_total_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_total_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_average_home", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_average_away", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_average_total", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_minute0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_total_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_total_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_average_home", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_average_away", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_average_total", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_minute0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_goals_stats", Type: field.TypeInt, Unique: true},
	}
	// TsGoalsTable holds the schema information for the "ts_goals" table.
	TsGoalsTable = &schema.Table{
		Name:       "ts_goals",
		Columns:    TsGoalsColumns,
		PrimaryKey: []*schema.Column{TsGoalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_goals_teams_goals_stats",
				Columns:    []*schema.Column{TsGoalsColumns[46]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsLineupsColumns holds the columns for the "ts_lineups" table.
	TsLineupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "formation", Type: field.TypeString},
		{Name: "played", Type: field.TypeInt},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_id", Type: field.TypeInt},
	}
	// TsLineupsTable holds the schema information for the "ts_lineups" table.
	TsLineupsTable = &schema.Table{
		Name:       "ts_lineups",
		Columns:    TsLineupsColumns,
		PrimaryKey: []*schema.Column{TsLineupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_lineups_teams_lineups",
				Columns:    []*schema.Column{TsLineupsColumns[4]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsPenaltiesColumns holds the columns for the "ts_penalties" table.
	TsPenaltiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "scored_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "missed_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "scored_percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "missed_percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_penalty_stats", Type: field.TypeInt, Unique: true},
	}
	// TsPenaltiesTable holds the schema information for the "ts_penalties" table.
	TsPenaltiesTable = &schema.Table{
		Name:       "ts_penalties",
		Columns:    TsPenaltiesColumns,
		PrimaryKey: []*schema.Column{TsPenaltiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_penalties_teams_penalty_stats",
				Columns:    []*schema.Column{TsPenaltiesColumns[7]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "form", Type: field.TypeString, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "club_team", Type: field.TypeInt},
		{Name: "season_teams", Type: field.TypeInt, Nullable: true},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teams_clubs_team",
				Columns:    []*schema.Column{TeamsColumns[3]},
				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "teams_seasons_teams",
				Columns:    []*schema.Column{TeamsColumns[4]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeamPlayersColumns holds the columns for the "team_players" table.
	TeamPlayersColumns = []*schema.Column{
		{Name: "team_id", Type: field.TypeInt},
		{Name: "player_id", Type: field.TypeInt},
	}
	// TeamPlayersTable holds the schema information for the "team_players" table.
	TeamPlayersTable = &schema.Table{
		Name:       "team_players",
		Columns:    TeamPlayersColumns,
		PrimaryKey: []*schema.Column{TeamPlayersColumns[0], TeamPlayersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "team_players_team_id",
				Columns:    []*schema.Column{TeamPlayersColumns[0]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "team_players_player_id",
				Columns:    []*schema.Column{TeamPlayersColumns[1]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BirthsTable,
		ClubsTable,
		CountriesTable,
		FixturesTable,
		LeaguesTable,
		PlayersTable,
		SeasonsTable,
		StandingsTable,
		TsBiggestsTable,
		TsCardsTable,
		TsCleanSheetsTable,
		TsFailedToScoresTable,
		TsFixturesTable,
		TsGoalsTable,
		TsLineupsTable,
		TsPenaltiesTable,
		TeamsTable,
		TeamPlayersTable,
	}
)

func init() {
	ClubsTable.ForeignKeys[0].RefTable = CountriesTable
	FixturesTable.ForeignKeys[0].RefTable = SeasonsTable
	FixturesTable.ForeignKeys[1].RefTable = TeamsTable
	FixturesTable.ForeignKeys[2].RefTable = TeamsTable
	LeaguesTable.ForeignKeys[0].RefTable = CountriesTable
	PlayersTable.ForeignKeys[0].RefTable = BirthsTable
	PlayersTable.ForeignKeys[1].RefTable = CountriesTable
	SeasonsTable.ForeignKeys[0].RefTable = LeaguesTable
	StandingsTable.ForeignKeys[0].RefTable = SeasonsTable
	StandingsTable.ForeignKeys[1].RefTable = TeamsTable
	TsBiggestsTable.ForeignKeys[0].RefTable = TeamsTable
	TsCardsTable.ForeignKeys[0].RefTable = TeamsTable
	TsCleanSheetsTable.ForeignKeys[0].RefTable = TeamsTable
	TsFailedToScoresTable.ForeignKeys[0].RefTable = TeamsTable
	TsFixturesTable.ForeignKeys[0].RefTable = TeamsTable
	TsGoalsTable.ForeignKeys[0].RefTable = TeamsTable
	TsLineupsTable.ForeignKeys[0].RefTable = TeamsTable
	TsPenaltiesTable.ForeignKeys[0].RefTable = TeamsTable
	TeamsTable.ForeignKeys[0].RefTable = ClubsTable
	TeamsTable.ForeignKeys[1].RefTable = SeasonsTable
	TeamPlayersTable.ForeignKeys[0].RefTable = TeamsTable
	TeamPlayersTable.ForeignKeys[1].RefTable = PlayersTable
}
