// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"time"

	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/predicate"
	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/team"
	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/tscards"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// TSCardsUpdate is the builder for updating TSCards entities.
type TSCardsUpdate struct {
	config
	hooks    []Hook
	mutation *TSCardsMutation
}

// Where appends a list predicates to the TSCardsUpdate builder.
func (tcu *TSCardsUpdate) Where(ps ...predicate.TSCards) *TSCardsUpdate {
	tcu.mutation.Where(ps...)
	return tcu
}

// SetYellow0To15Total sets the "yellow0To15Total" field.
func (tcu *TSCardsUpdate) SetYellow0To15Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow0To15Total()
	tcu.mutation.SetYellow0To15Total(i)
	return tcu
}

// SetNillableYellow0To15Total sets the "yellow0To15Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow0To15Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow0To15Total(*i)
	}
	return tcu
}

// AddYellow0To15Total adds i to the "yellow0To15Total" field.
func (tcu *TSCardsUpdate) AddYellow0To15Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow0To15Total(i)
	return tcu
}

// ClearYellow0To15Total clears the value of the "yellow0To15Total" field.
func (tcu *TSCardsUpdate) ClearYellow0To15Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow0To15Total()
	return tcu
}

// SetYellow0To15Percentage sets the "yellow0To15Percentage" field.
func (tcu *TSCardsUpdate) SetYellow0To15Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow0To15Percentage(s)
	return tcu
}

// SetNillableYellow0To15Percentage sets the "yellow0To15Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow0To15Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow0To15Percentage(*s)
	}
	return tcu
}

// ClearYellow0To15Percentage clears the value of the "yellow0To15Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow0To15Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow0To15Percentage()
	return tcu
}

// SetYellow16To30Total sets the "yellow16To30Total" field.
func (tcu *TSCardsUpdate) SetYellow16To30Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow16To30Total()
	tcu.mutation.SetYellow16To30Total(i)
	return tcu
}

// SetNillableYellow16To30Total sets the "yellow16To30Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow16To30Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow16To30Total(*i)
	}
	return tcu
}

// AddYellow16To30Total adds i to the "yellow16To30Total" field.
func (tcu *TSCardsUpdate) AddYellow16To30Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow16To30Total(i)
	return tcu
}

// ClearYellow16To30Total clears the value of the "yellow16To30Total" field.
func (tcu *TSCardsUpdate) ClearYellow16To30Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow16To30Total()
	return tcu
}

// SetYellow16To30Percentage sets the "yellow16To30Percentage" field.
func (tcu *TSCardsUpdate) SetYellow16To30Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow16To30Percentage(s)
	return tcu
}

// SetNillableYellow16To30Percentage sets the "yellow16To30Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow16To30Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow16To30Percentage(*s)
	}
	return tcu
}

// ClearYellow16To30Percentage clears the value of the "yellow16To30Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow16To30Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow16To30Percentage()
	return tcu
}

// SetYellow31To45Total sets the "yellow31To45Total" field.
func (tcu *TSCardsUpdate) SetYellow31To45Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow31To45Total()
	tcu.mutation.SetYellow31To45Total(i)
	return tcu
}

// SetNillableYellow31To45Total sets the "yellow31To45Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow31To45Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow31To45Total(*i)
	}
	return tcu
}

// AddYellow31To45Total adds i to the "yellow31To45Total" field.
func (tcu *TSCardsUpdate) AddYellow31To45Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow31To45Total(i)
	return tcu
}

// ClearYellow31To45Total clears the value of the "yellow31To45Total" field.
func (tcu *TSCardsUpdate) ClearYellow31To45Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow31To45Total()
	return tcu
}

// SetYellow31To45Percentage sets the "yellow31To45Percentage" field.
func (tcu *TSCardsUpdate) SetYellow31To45Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow31To45Percentage(s)
	return tcu
}

// SetNillableYellow31To45Percentage sets the "yellow31To45Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow31To45Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow31To45Percentage(*s)
	}
	return tcu
}

// ClearYellow31To45Percentage clears the value of the "yellow31To45Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow31To45Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow31To45Percentage()
	return tcu
}

// SetYellow46To60Total sets the "yellow46To60Total" field.
func (tcu *TSCardsUpdate) SetYellow46To60Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow46To60Total()
	tcu.mutation.SetYellow46To60Total(i)
	return tcu
}

// SetNillableYellow46To60Total sets the "yellow46To60Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow46To60Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow46To60Total(*i)
	}
	return tcu
}

// AddYellow46To60Total adds i to the "yellow46To60Total" field.
func (tcu *TSCardsUpdate) AddYellow46To60Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow46To60Total(i)
	return tcu
}

// ClearYellow46To60Total clears the value of the "yellow46To60Total" field.
func (tcu *TSCardsUpdate) ClearYellow46To60Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow46To60Total()
	return tcu
}

// SetYellow46To60Percentage sets the "yellow46To60Percentage" field.
func (tcu *TSCardsUpdate) SetYellow46To60Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow46To60Percentage(s)
	return tcu
}

// SetNillableYellow46To60Percentage sets the "yellow46To60Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow46To60Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow46To60Percentage(*s)
	}
	return tcu
}

// ClearYellow46To60Percentage clears the value of the "yellow46To60Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow46To60Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow46To60Percentage()
	return tcu
}

// SetYellow61To75Total sets the "yellow61To75Total" field.
func (tcu *TSCardsUpdate) SetYellow61To75Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow61To75Total()
	tcu.mutation.SetYellow61To75Total(i)
	return tcu
}

// SetNillableYellow61To75Total sets the "yellow61To75Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow61To75Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow61To75Total(*i)
	}
	return tcu
}

// AddYellow61To75Total adds i to the "yellow61To75Total" field.
func (tcu *TSCardsUpdate) AddYellow61To75Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow61To75Total(i)
	return tcu
}

// ClearYellow61To75Total clears the value of the "yellow61To75Total" field.
func (tcu *TSCardsUpdate) ClearYellow61To75Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow61To75Total()
	return tcu
}

// SetYellow61To75Percentage sets the "yellow61To75Percentage" field.
func (tcu *TSCardsUpdate) SetYellow61To75Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow61To75Percentage(s)
	return tcu
}

// SetNillableYellow61To75Percentage sets the "yellow61To75Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow61To75Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow61To75Percentage(*s)
	}
	return tcu
}

// ClearYellow61To75Percentage clears the value of the "yellow61To75Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow61To75Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow61To75Percentage()
	return tcu
}

// SetYellow76To90Total sets the "yellow76To90Total" field.
func (tcu *TSCardsUpdate) SetYellow76To90Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow76To90Total()
	tcu.mutation.SetYellow76To90Total(i)
	return tcu
}

// SetNillableYellow76To90Total sets the "yellow76To90Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow76To90Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow76To90Total(*i)
	}
	return tcu
}

// AddYellow76To90Total adds i to the "yellow76To90Total" field.
func (tcu *TSCardsUpdate) AddYellow76To90Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow76To90Total(i)
	return tcu
}

// ClearYellow76To90Total clears the value of the "yellow76To90Total" field.
func (tcu *TSCardsUpdate) ClearYellow76To90Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow76To90Total()
	return tcu
}

// SetYellow76To90Percentage sets the "yellow76To90Percentage" field.
func (tcu *TSCardsUpdate) SetYellow76To90Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow76To90Percentage(s)
	return tcu
}

// SetNillableYellow76To90Percentage sets the "yellow76To90Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow76To90Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow76To90Percentage(*s)
	}
	return tcu
}

// ClearYellow76To90Percentage clears the value of the "yellow76To90Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow76To90Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow76To90Percentage()
	return tcu
}

// SetYellow91to105Total sets the "yellow91to105Total" field.
func (tcu *TSCardsUpdate) SetYellow91to105Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow91to105Total()
	tcu.mutation.SetYellow91to105Total(i)
	return tcu
}

// SetNillableYellow91to105Total sets the "yellow91to105Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow91to105Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow91to105Total(*i)
	}
	return tcu
}

// AddYellow91to105Total adds i to the "yellow91to105Total" field.
func (tcu *TSCardsUpdate) AddYellow91to105Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow91to105Total(i)
	return tcu
}

// ClearYellow91to105Total clears the value of the "yellow91to105Total" field.
func (tcu *TSCardsUpdate) ClearYellow91to105Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow91to105Total()
	return tcu
}

// SetYellow91to105Percentage sets the "yellow91to105Percentage" field.
func (tcu *TSCardsUpdate) SetYellow91to105Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow91to105Percentage(s)
	return tcu
}

// SetNillableYellow91to105Percentage sets the "yellow91to105Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow91to105Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow91to105Percentage(*s)
	}
	return tcu
}

// ClearYellow91to105Percentage clears the value of the "yellow91to105Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow91to105Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow91to105Percentage()
	return tcu
}

// SetYellow106To120Total sets the "yellow106To120Total" field.
func (tcu *TSCardsUpdate) SetYellow106To120Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetYellow106To120Total()
	tcu.mutation.SetYellow106To120Total(i)
	return tcu
}

// SetNillableYellow106To120Total sets the "yellow106To120Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow106To120Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetYellow106To120Total(*i)
	}
	return tcu
}

// AddYellow106To120Total adds i to the "yellow106To120Total" field.
func (tcu *TSCardsUpdate) AddYellow106To120Total(i int) *TSCardsUpdate {
	tcu.mutation.AddYellow106To120Total(i)
	return tcu
}

// ClearYellow106To120Total clears the value of the "yellow106To120Total" field.
func (tcu *TSCardsUpdate) ClearYellow106To120Total() *TSCardsUpdate {
	tcu.mutation.ClearYellow106To120Total()
	return tcu
}

// SetYellow106To120Percentage sets the "yellow106To120Percentage" field.
func (tcu *TSCardsUpdate) SetYellow106To120Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetYellow106To120Percentage(s)
	return tcu
}

// SetNillableYellow106To120Percentage sets the "yellow106To120Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableYellow106To120Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetYellow106To120Percentage(*s)
	}
	return tcu
}

// ClearYellow106To120Percentage clears the value of the "yellow106To120Percentage" field.
func (tcu *TSCardsUpdate) ClearYellow106To120Percentage() *TSCardsUpdate {
	tcu.mutation.ClearYellow106To120Percentage()
	return tcu
}

// SetRed0To15Total sets the "red0To15Total" field.
func (tcu *TSCardsUpdate) SetRed0To15Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed0To15Total()
	tcu.mutation.SetRed0To15Total(i)
	return tcu
}

// SetNillableRed0To15Total sets the "red0To15Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed0To15Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed0To15Total(*i)
	}
	return tcu
}

// AddRed0To15Total adds i to the "red0To15Total" field.
func (tcu *TSCardsUpdate) AddRed0To15Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed0To15Total(i)
	return tcu
}

// ClearRed0To15Total clears the value of the "red0To15Total" field.
func (tcu *TSCardsUpdate) ClearRed0To15Total() *TSCardsUpdate {
	tcu.mutation.ClearRed0To15Total()
	return tcu
}

// SetRed0To15Percentage sets the "red0To15Percentage" field.
func (tcu *TSCardsUpdate) SetRed0To15Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed0To15Percentage(s)
	return tcu
}

// SetNillableRed0To15Percentage sets the "red0To15Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed0To15Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed0To15Percentage(*s)
	}
	return tcu
}

// ClearRed0To15Percentage clears the value of the "red0To15Percentage" field.
func (tcu *TSCardsUpdate) ClearRed0To15Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed0To15Percentage()
	return tcu
}

// SetRed16To30Total sets the "red16To30Total" field.
func (tcu *TSCardsUpdate) SetRed16To30Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed16To30Total()
	tcu.mutation.SetRed16To30Total(i)
	return tcu
}

// SetNillableRed16To30Total sets the "red16To30Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed16To30Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed16To30Total(*i)
	}
	return tcu
}

// AddRed16To30Total adds i to the "red16To30Total" field.
func (tcu *TSCardsUpdate) AddRed16To30Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed16To30Total(i)
	return tcu
}

// ClearRed16To30Total clears the value of the "red16To30Total" field.
func (tcu *TSCardsUpdate) ClearRed16To30Total() *TSCardsUpdate {
	tcu.mutation.ClearRed16To30Total()
	return tcu
}

// SetRed16To30Percentage sets the "red16To30Percentage" field.
func (tcu *TSCardsUpdate) SetRed16To30Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed16To30Percentage(s)
	return tcu
}

// SetNillableRed16To30Percentage sets the "red16To30Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed16To30Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed16To30Percentage(*s)
	}
	return tcu
}

// ClearRed16To30Percentage clears the value of the "red16To30Percentage" field.
func (tcu *TSCardsUpdate) ClearRed16To30Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed16To30Percentage()
	return tcu
}

// SetRed31To45Total sets the "red31To45Total" field.
func (tcu *TSCardsUpdate) SetRed31To45Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed31To45Total()
	tcu.mutation.SetRed31To45Total(i)
	return tcu
}

// SetNillableRed31To45Total sets the "red31To45Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed31To45Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed31To45Total(*i)
	}
	return tcu
}

// AddRed31To45Total adds i to the "red31To45Total" field.
func (tcu *TSCardsUpdate) AddRed31To45Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed31To45Total(i)
	return tcu
}

// ClearRed31To45Total clears the value of the "red31To45Total" field.
func (tcu *TSCardsUpdate) ClearRed31To45Total() *TSCardsUpdate {
	tcu.mutation.ClearRed31To45Total()
	return tcu
}

// SetRed31To45Percentage sets the "red31To45Percentage" field.
func (tcu *TSCardsUpdate) SetRed31To45Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed31To45Percentage(s)
	return tcu
}

// SetNillableRed31To45Percentage sets the "red31To45Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed31To45Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed31To45Percentage(*s)
	}
	return tcu
}

// ClearRed31To45Percentage clears the value of the "red31To45Percentage" field.
func (tcu *TSCardsUpdate) ClearRed31To45Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed31To45Percentage()
	return tcu
}

// SetRed46To60Total sets the "red46To60Total" field.
func (tcu *TSCardsUpdate) SetRed46To60Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed46To60Total()
	tcu.mutation.SetRed46To60Total(i)
	return tcu
}

// SetNillableRed46To60Total sets the "red46To60Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed46To60Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed46To60Total(*i)
	}
	return tcu
}

// AddRed46To60Total adds i to the "red46To60Total" field.
func (tcu *TSCardsUpdate) AddRed46To60Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed46To60Total(i)
	return tcu
}

// ClearRed46To60Total clears the value of the "red46To60Total" field.
func (tcu *TSCardsUpdate) ClearRed46To60Total() *TSCardsUpdate {
	tcu.mutation.ClearRed46To60Total()
	return tcu
}

// SetRed46To60Percentage sets the "red46To60Percentage" field.
func (tcu *TSCardsUpdate) SetRed46To60Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed46To60Percentage(s)
	return tcu
}

// SetNillableRed46To60Percentage sets the "red46To60Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed46To60Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed46To60Percentage(*s)
	}
	return tcu
}

// ClearRed46To60Percentage clears the value of the "red46To60Percentage" field.
func (tcu *TSCardsUpdate) ClearRed46To60Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed46To60Percentage()
	return tcu
}

// SetRed61To75Total sets the "red61To75Total" field.
func (tcu *TSCardsUpdate) SetRed61To75Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed61To75Total()
	tcu.mutation.SetRed61To75Total(i)
	return tcu
}

// SetNillableRed61To75Total sets the "red61To75Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed61To75Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed61To75Total(*i)
	}
	return tcu
}

// AddRed61To75Total adds i to the "red61To75Total" field.
func (tcu *TSCardsUpdate) AddRed61To75Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed61To75Total(i)
	return tcu
}

// ClearRed61To75Total clears the value of the "red61To75Total" field.
func (tcu *TSCardsUpdate) ClearRed61To75Total() *TSCardsUpdate {
	tcu.mutation.ClearRed61To75Total()
	return tcu
}

// SetRed61To75Percentage sets the "red61To75Percentage" field.
func (tcu *TSCardsUpdate) SetRed61To75Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed61To75Percentage(s)
	return tcu
}

// SetNillableRed61To75Percentage sets the "red61To75Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed61To75Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed61To75Percentage(*s)
	}
	return tcu
}

// ClearRed61To75Percentage clears the value of the "red61To75Percentage" field.
func (tcu *TSCardsUpdate) ClearRed61To75Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed61To75Percentage()
	return tcu
}

// SetRed76To90Total sets the "red76To90Total" field.
func (tcu *TSCardsUpdate) SetRed76To90Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed76To90Total()
	tcu.mutation.SetRed76To90Total(i)
	return tcu
}

// SetNillableRed76To90Total sets the "red76To90Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed76To90Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed76To90Total(*i)
	}
	return tcu
}

// AddRed76To90Total adds i to the "red76To90Total" field.
func (tcu *TSCardsUpdate) AddRed76To90Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed76To90Total(i)
	return tcu
}

// ClearRed76To90Total clears the value of the "red76To90Total" field.
func (tcu *TSCardsUpdate) ClearRed76To90Total() *TSCardsUpdate {
	tcu.mutation.ClearRed76To90Total()
	return tcu
}

// SetRed76To90Percentage sets the "red76To90Percentage" field.
func (tcu *TSCardsUpdate) SetRed76To90Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed76To90Percentage(s)
	return tcu
}

// SetNillableRed76To90Percentage sets the "red76To90Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed76To90Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed76To90Percentage(*s)
	}
	return tcu
}

// ClearRed76To90Percentage clears the value of the "red76To90Percentage" field.
func (tcu *TSCardsUpdate) ClearRed76To90Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed76To90Percentage()
	return tcu
}

// SetRed91to105Total sets the "red91to105Total" field.
func (tcu *TSCardsUpdate) SetRed91to105Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed91to105Total()
	tcu.mutation.SetRed91to105Total(i)
	return tcu
}

// SetNillableRed91to105Total sets the "red91to105Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed91to105Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed91to105Total(*i)
	}
	return tcu
}

// AddRed91to105Total adds i to the "red91to105Total" field.
func (tcu *TSCardsUpdate) AddRed91to105Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed91to105Total(i)
	return tcu
}

// ClearRed91to105Total clears the value of the "red91to105Total" field.
func (tcu *TSCardsUpdate) ClearRed91to105Total() *TSCardsUpdate {
	tcu.mutation.ClearRed91to105Total()
	return tcu
}

// SetRed91to105Percentage sets the "red91to105Percentage" field.
func (tcu *TSCardsUpdate) SetRed91to105Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed91to105Percentage(s)
	return tcu
}

// SetNillableRed91to105Percentage sets the "red91to105Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed91to105Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed91to105Percentage(*s)
	}
	return tcu
}

// ClearRed91to105Percentage clears the value of the "red91to105Percentage" field.
func (tcu *TSCardsUpdate) ClearRed91to105Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed91to105Percentage()
	return tcu
}

// SetRed106To120Total sets the "red106To120Total" field.
func (tcu *TSCardsUpdate) SetRed106To120Total(i int) *TSCardsUpdate {
	tcu.mutation.ResetRed106To120Total()
	tcu.mutation.SetRed106To120Total(i)
	return tcu
}

// SetNillableRed106To120Total sets the "red106To120Total" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed106To120Total(i *int) *TSCardsUpdate {
	if i != nil {
		tcu.SetRed106To120Total(*i)
	}
	return tcu
}

// AddRed106To120Total adds i to the "red106To120Total" field.
func (tcu *TSCardsUpdate) AddRed106To120Total(i int) *TSCardsUpdate {
	tcu.mutation.AddRed106To120Total(i)
	return tcu
}

// ClearRed106To120Total clears the value of the "red106To120Total" field.
func (tcu *TSCardsUpdate) ClearRed106To120Total() *TSCardsUpdate {
	tcu.mutation.ClearRed106To120Total()
	return tcu
}

// SetRed106To120Percentage sets the "red106To120Percentage" field.
func (tcu *TSCardsUpdate) SetRed106To120Percentage(s string) *TSCardsUpdate {
	tcu.mutation.SetRed106To120Percentage(s)
	return tcu
}

// SetNillableRed106To120Percentage sets the "red106To120Percentage" field if the given value is not nil.
func (tcu *TSCardsUpdate) SetNillableRed106To120Percentage(s *string) *TSCardsUpdate {
	if s != nil {
		tcu.SetRed106To120Percentage(*s)
	}
	return tcu
}

// ClearRed106To120Percentage clears the value of the "red106To120Percentage" field.
func (tcu *TSCardsUpdate) ClearRed106To120Percentage() *TSCardsUpdate {
	tcu.mutation.ClearRed106To120Percentage()
	return tcu
}

// SetLastUpdated sets the "lastUpdated" field.
func (tcu *TSCardsUpdate) SetLastUpdated(t time.Time) *TSCardsUpdate {
	tcu.mutation.SetLastUpdated(t)
	return tcu
}

// ClearLastUpdated clears the value of the "lastUpdated" field.
func (tcu *TSCardsUpdate) ClearLastUpdated() *TSCardsUpdate {
	tcu.mutation.ClearLastUpdated()
	return tcu
}

// SetTeamID sets the "team" edge to the Team entity by ID.
func (tcu *TSCardsUpdate) SetTeamID(id int) *TSCardsUpdate {
	tcu.mutation.SetTeamID(id)
	return tcu
}

// SetTeam sets the "team" edge to the Team entity.
func (tcu *TSCardsUpdate) SetTeam(t *Team) *TSCardsUpdate {
	return tcu.SetTeamID(t.ID)
}

// Mutation returns the TSCardsMutation object of the builder.
func (tcu *TSCardsUpdate) Mutation() *TSCardsMutation {
	return tcu.mutation
}

// ClearTeam clears the "team" edge to the Team entity.
func (tcu *TSCardsUpdate) ClearTeam() *TSCardsUpdate {
	tcu.mutation.ClearTeam()
	return tcu
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (tcu *TSCardsUpdate) Save(ctx context.Context) (int, error) {
	tcu.defaults()
	return withHooks(ctx, tcu.sqlSave, tcu.mutation, tcu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (tcu *TSCardsUpdate) SaveX(ctx context.Context) int {
	affected, err := tcu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (tcu *TSCardsUpdate) Exec(ctx context.Context) error {
	_, err := tcu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (tcu *TSCardsUpdate) ExecX(ctx context.Context) {
	if err := tcu.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (tcu *TSCardsUpdate) defaults() {
	if _, ok := tcu.mutation.LastUpdated(); !ok && !tcu.mutation.LastUpdatedCleared() {
		v := tscards.UpdateDefaultLastUpdated()
		tcu.mutation.SetLastUpdated(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (tcu *TSCardsUpdate) check() error {
	if _, ok := tcu.mutation.TeamID(); tcu.mutation.TeamCleared() && !ok {
		return errors.New(`ent: clearing a required unique edge "TSCards.team"`)
	}
	return nil
}

func (tcu *TSCardsUpdate) sqlSave(ctx context.Context) (n int, err error) {
	if err := tcu.check(); err != nil {
		return n, err
	}
	_spec := sqlgraph.NewUpdateSpec(tscards.Table, tscards.Columns, sqlgraph.NewFieldSpec(tscards.FieldID, field.TypeInt))
	if ps := tcu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := tcu.mutation.Yellow0To15Total(); ok {
		_spec.SetField(tscards.FieldYellow0To15Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow0To15Total(); ok {
		_spec.AddField(tscards.FieldYellow0To15Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow0To15TotalCleared() {
		_spec.ClearField(tscards.FieldYellow0To15Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow0To15Percentage(); ok {
		_spec.SetField(tscards.FieldYellow0To15Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow0To15PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow0To15Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow16To30Total(); ok {
		_spec.SetField(tscards.FieldYellow16To30Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow16To30Total(); ok {
		_spec.AddField(tscards.FieldYellow16To30Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow16To30TotalCleared() {
		_spec.ClearField(tscards.FieldYellow16To30Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow16To30Percentage(); ok {
		_spec.SetField(tscards.FieldYellow16To30Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow16To30PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow16To30Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow31To45Total(); ok {
		_spec.SetField(tscards.FieldYellow31To45Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow31To45Total(); ok {
		_spec.AddField(tscards.FieldYellow31To45Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow31To45TotalCleared() {
		_spec.ClearField(tscards.FieldYellow31To45Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow31To45Percentage(); ok {
		_spec.SetField(tscards.FieldYellow31To45Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow31To45PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow31To45Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow46To60Total(); ok {
		_spec.SetField(tscards.FieldYellow46To60Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow46To60Total(); ok {
		_spec.AddField(tscards.FieldYellow46To60Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow46To60TotalCleared() {
		_spec.ClearField(tscards.FieldYellow46To60Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow46To60Percentage(); ok {
		_spec.SetField(tscards.FieldYellow46To60Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow46To60PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow46To60Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow61To75Total(); ok {
		_spec.SetField(tscards.FieldYellow61To75Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow61To75Total(); ok {
		_spec.AddField(tscards.FieldYellow61To75Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow61To75TotalCleared() {
		_spec.ClearField(tscards.FieldYellow61To75Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow61To75Percentage(); ok {
		_spec.SetField(tscards.FieldYellow61To75Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow61To75PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow61To75Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow76To90Total(); ok {
		_spec.SetField(tscards.FieldYellow76To90Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow76To90Total(); ok {
		_spec.AddField(tscards.FieldYellow76To90Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow76To90TotalCleared() {
		_spec.ClearField(tscards.FieldYellow76To90Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow76To90Percentage(); ok {
		_spec.SetField(tscards.FieldYellow76To90Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow76To90PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow76To90Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow91to105Total(); ok {
		_spec.SetField(tscards.FieldYellow91to105Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow91to105Total(); ok {
		_spec.AddField(tscards.FieldYellow91to105Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow91to105TotalCleared() {
		_spec.ClearField(tscards.FieldYellow91to105Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow91to105Percentage(); ok {
		_spec.SetField(tscards.FieldYellow91to105Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow91to105PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow91to105Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Yellow106To120Total(); ok {
		_spec.SetField(tscards.FieldYellow106To120Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedYellow106To120Total(); ok {
		_spec.AddField(tscards.FieldYellow106To120Total, field.TypeInt, value)
	}
	if tcu.mutation.Yellow106To120TotalCleared() {
		_spec.ClearField(tscards.FieldYellow106To120Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Yellow106To120Percentage(); ok {
		_spec.SetField(tscards.FieldYellow106To120Percentage, field.TypeString, value)
	}
	if tcu.mutation.Yellow106To120PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow106To120Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red0To15Total(); ok {
		_spec.SetField(tscards.FieldRed0To15Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed0To15Total(); ok {
		_spec.AddField(tscards.FieldRed0To15Total, field.TypeInt, value)
	}
	if tcu.mutation.Red0To15TotalCleared() {
		_spec.ClearField(tscards.FieldRed0To15Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red0To15Percentage(); ok {
		_spec.SetField(tscards.FieldRed0To15Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red0To15PercentageCleared() {
		_spec.ClearField(tscards.FieldRed0To15Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red16To30Total(); ok {
		_spec.SetField(tscards.FieldRed16To30Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed16To30Total(); ok {
		_spec.AddField(tscards.FieldRed16To30Total, field.TypeInt, value)
	}
	if tcu.mutation.Red16To30TotalCleared() {
		_spec.ClearField(tscards.FieldRed16To30Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red16To30Percentage(); ok {
		_spec.SetField(tscards.FieldRed16To30Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red16To30PercentageCleared() {
		_spec.ClearField(tscards.FieldRed16To30Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red31To45Total(); ok {
		_spec.SetField(tscards.FieldRed31To45Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed31To45Total(); ok {
		_spec.AddField(tscards.FieldRed31To45Total, field.TypeInt, value)
	}
	if tcu.mutation.Red31To45TotalCleared() {
		_spec.ClearField(tscards.FieldRed31To45Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red31To45Percentage(); ok {
		_spec.SetField(tscards.FieldRed31To45Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red31To45PercentageCleared() {
		_spec.ClearField(tscards.FieldRed31To45Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red46To60Total(); ok {
		_spec.SetField(tscards.FieldRed46To60Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed46To60Total(); ok {
		_spec.AddField(tscards.FieldRed46To60Total, field.TypeInt, value)
	}
	if tcu.mutation.Red46To60TotalCleared() {
		_spec.ClearField(tscards.FieldRed46To60Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red46To60Percentage(); ok {
		_spec.SetField(tscards.FieldRed46To60Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red46To60PercentageCleared() {
		_spec.ClearField(tscards.FieldRed46To60Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red61To75Total(); ok {
		_spec.SetField(tscards.FieldRed61To75Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed61To75Total(); ok {
		_spec.AddField(tscards.FieldRed61To75Total, field.TypeInt, value)
	}
	if tcu.mutation.Red61To75TotalCleared() {
		_spec.ClearField(tscards.FieldRed61To75Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red61To75Percentage(); ok {
		_spec.SetField(tscards.FieldRed61To75Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red61To75PercentageCleared() {
		_spec.ClearField(tscards.FieldRed61To75Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red76To90Total(); ok {
		_spec.SetField(tscards.FieldRed76To90Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed76To90Total(); ok {
		_spec.AddField(tscards.FieldRed76To90Total, field.TypeInt, value)
	}
	if tcu.mutation.Red76To90TotalCleared() {
		_spec.ClearField(tscards.FieldRed76To90Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red76To90Percentage(); ok {
		_spec.SetField(tscards.FieldRed76To90Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red76To90PercentageCleared() {
		_spec.ClearField(tscards.FieldRed76To90Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red91to105Total(); ok {
		_spec.SetField(tscards.FieldRed91to105Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed91to105Total(); ok {
		_spec.AddField(tscards.FieldRed91to105Total, field.TypeInt, value)
	}
	if tcu.mutation.Red91to105TotalCleared() {
		_spec.ClearField(tscards.FieldRed91to105Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red91to105Percentage(); ok {
		_spec.SetField(tscards.FieldRed91to105Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red91to105PercentageCleared() {
		_spec.ClearField(tscards.FieldRed91to105Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.Red106To120Total(); ok {
		_spec.SetField(tscards.FieldRed106To120Total, field.TypeInt, value)
	}
	if value, ok := tcu.mutation.AddedRed106To120Total(); ok {
		_spec.AddField(tscards.FieldRed106To120Total, field.TypeInt, value)
	}
	if tcu.mutation.Red106To120TotalCleared() {
		_spec.ClearField(tscards.FieldRed106To120Total, field.TypeInt)
	}
	if value, ok := tcu.mutation.Red106To120Percentage(); ok {
		_spec.SetField(tscards.FieldRed106To120Percentage, field.TypeString, value)
	}
	if tcu.mutation.Red106To120PercentageCleared() {
		_spec.ClearField(tscards.FieldRed106To120Percentage, field.TypeString)
	}
	if value, ok := tcu.mutation.LastUpdated(); ok {
		_spec.SetField(tscards.FieldLastUpdated, field.TypeTime, value)
	}
	if tcu.mutation.LastUpdatedCleared() {
		_spec.ClearField(tscards.FieldLastUpdated, field.TypeTime)
	}
	if tcu.mutation.TeamCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   tscards.TeamTable,
			Columns: []string{tscards.TeamColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(team.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := tcu.mutation.TeamIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   tscards.TeamTable,
			Columns: []string{tscards.TeamColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(team.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, tcu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{tscards.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	tcu.mutation.done = true
	return n, nil
}

// TSCardsUpdateOne is the builder for updating a single TSCards entity.
type TSCardsUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *TSCardsMutation
}

// SetYellow0To15Total sets the "yellow0To15Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow0To15Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow0To15Total()
	tcuo.mutation.SetYellow0To15Total(i)
	return tcuo
}

// SetNillableYellow0To15Total sets the "yellow0To15Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow0To15Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow0To15Total(*i)
	}
	return tcuo
}

// AddYellow0To15Total adds i to the "yellow0To15Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow0To15Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow0To15Total(i)
	return tcuo
}

// ClearYellow0To15Total clears the value of the "yellow0To15Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow0To15Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow0To15Total()
	return tcuo
}

// SetYellow0To15Percentage sets the "yellow0To15Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow0To15Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow0To15Percentage(s)
	return tcuo
}

// SetNillableYellow0To15Percentage sets the "yellow0To15Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow0To15Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow0To15Percentage(*s)
	}
	return tcuo
}

// ClearYellow0To15Percentage clears the value of the "yellow0To15Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow0To15Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow0To15Percentage()
	return tcuo
}

// SetYellow16To30Total sets the "yellow16To30Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow16To30Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow16To30Total()
	tcuo.mutation.SetYellow16To30Total(i)
	return tcuo
}

// SetNillableYellow16To30Total sets the "yellow16To30Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow16To30Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow16To30Total(*i)
	}
	return tcuo
}

// AddYellow16To30Total adds i to the "yellow16To30Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow16To30Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow16To30Total(i)
	return tcuo
}

// ClearYellow16To30Total clears the value of the "yellow16To30Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow16To30Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow16To30Total()
	return tcuo
}

// SetYellow16To30Percentage sets the "yellow16To30Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow16To30Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow16To30Percentage(s)
	return tcuo
}

// SetNillableYellow16To30Percentage sets the "yellow16To30Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow16To30Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow16To30Percentage(*s)
	}
	return tcuo
}

// ClearYellow16To30Percentage clears the value of the "yellow16To30Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow16To30Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow16To30Percentage()
	return tcuo
}

// SetYellow31To45Total sets the "yellow31To45Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow31To45Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow31To45Total()
	tcuo.mutation.SetYellow31To45Total(i)
	return tcuo
}

// SetNillableYellow31To45Total sets the "yellow31To45Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow31To45Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow31To45Total(*i)
	}
	return tcuo
}

// AddYellow31To45Total adds i to the "yellow31To45Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow31To45Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow31To45Total(i)
	return tcuo
}

// ClearYellow31To45Total clears the value of the "yellow31To45Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow31To45Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow31To45Total()
	return tcuo
}

// SetYellow31To45Percentage sets the "yellow31To45Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow31To45Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow31To45Percentage(s)
	return tcuo
}

// SetNillableYellow31To45Percentage sets the "yellow31To45Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow31To45Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow31To45Percentage(*s)
	}
	return tcuo
}

// ClearYellow31To45Percentage clears the value of the "yellow31To45Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow31To45Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow31To45Percentage()
	return tcuo
}

// SetYellow46To60Total sets the "yellow46To60Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow46To60Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow46To60Total()
	tcuo.mutation.SetYellow46To60Total(i)
	return tcuo
}

// SetNillableYellow46To60Total sets the "yellow46To60Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow46To60Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow46To60Total(*i)
	}
	return tcuo
}

// AddYellow46To60Total adds i to the "yellow46To60Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow46To60Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow46To60Total(i)
	return tcuo
}

// ClearYellow46To60Total clears the value of the "yellow46To60Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow46To60Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow46To60Total()
	return tcuo
}

// SetYellow46To60Percentage sets the "yellow46To60Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow46To60Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow46To60Percentage(s)
	return tcuo
}

// SetNillableYellow46To60Percentage sets the "yellow46To60Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow46To60Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow46To60Percentage(*s)
	}
	return tcuo
}

// ClearYellow46To60Percentage clears the value of the "yellow46To60Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow46To60Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow46To60Percentage()
	return tcuo
}

// SetYellow61To75Total sets the "yellow61To75Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow61To75Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow61To75Total()
	tcuo.mutation.SetYellow61To75Total(i)
	return tcuo
}

// SetNillableYellow61To75Total sets the "yellow61To75Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow61To75Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow61To75Total(*i)
	}
	return tcuo
}

// AddYellow61To75Total adds i to the "yellow61To75Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow61To75Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow61To75Total(i)
	return tcuo
}

// ClearYellow61To75Total clears the value of the "yellow61To75Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow61To75Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow61To75Total()
	return tcuo
}

// SetYellow61To75Percentage sets the "yellow61To75Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow61To75Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow61To75Percentage(s)
	return tcuo
}

// SetNillableYellow61To75Percentage sets the "yellow61To75Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow61To75Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow61To75Percentage(*s)
	}
	return tcuo
}

// ClearYellow61To75Percentage clears the value of the "yellow61To75Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow61To75Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow61To75Percentage()
	return tcuo
}

// SetYellow76To90Total sets the "yellow76To90Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow76To90Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow76To90Total()
	tcuo.mutation.SetYellow76To90Total(i)
	return tcuo
}

// SetNillableYellow76To90Total sets the "yellow76To90Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow76To90Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow76To90Total(*i)
	}
	return tcuo
}

// AddYellow76To90Total adds i to the "yellow76To90Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow76To90Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow76To90Total(i)
	return tcuo
}

// ClearYellow76To90Total clears the value of the "yellow76To90Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow76To90Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow76To90Total()
	return tcuo
}

// SetYellow76To90Percentage sets the "yellow76To90Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow76To90Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow76To90Percentage(s)
	return tcuo
}

// SetNillableYellow76To90Percentage sets the "yellow76To90Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow76To90Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow76To90Percentage(*s)
	}
	return tcuo
}

// ClearYellow76To90Percentage clears the value of the "yellow76To90Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow76To90Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow76To90Percentage()
	return tcuo
}

// SetYellow91to105Total sets the "yellow91to105Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow91to105Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow91to105Total()
	tcuo.mutation.SetYellow91to105Total(i)
	return tcuo
}

// SetNillableYellow91to105Total sets the "yellow91to105Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow91to105Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow91to105Total(*i)
	}
	return tcuo
}

// AddYellow91to105Total adds i to the "yellow91to105Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow91to105Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow91to105Total(i)
	return tcuo
}

// ClearYellow91to105Total clears the value of the "yellow91to105Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow91to105Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow91to105Total()
	return tcuo
}

// SetYellow91to105Percentage sets the "yellow91to105Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow91to105Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow91to105Percentage(s)
	return tcuo
}

// SetNillableYellow91to105Percentage sets the "yellow91to105Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow91to105Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow91to105Percentage(*s)
	}
	return tcuo
}

// ClearYellow91to105Percentage clears the value of the "yellow91to105Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow91to105Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow91to105Percentage()
	return tcuo
}

// SetYellow106To120Total sets the "yellow106To120Total" field.
func (tcuo *TSCardsUpdateOne) SetYellow106To120Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetYellow106To120Total()
	tcuo.mutation.SetYellow106To120Total(i)
	return tcuo
}

// SetNillableYellow106To120Total sets the "yellow106To120Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow106To120Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetYellow106To120Total(*i)
	}
	return tcuo
}

// AddYellow106To120Total adds i to the "yellow106To120Total" field.
func (tcuo *TSCardsUpdateOne) AddYellow106To120Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddYellow106To120Total(i)
	return tcuo
}

// ClearYellow106To120Total clears the value of the "yellow106To120Total" field.
func (tcuo *TSCardsUpdateOne) ClearYellow106To120Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow106To120Total()
	return tcuo
}

// SetYellow106To120Percentage sets the "yellow106To120Percentage" field.
func (tcuo *TSCardsUpdateOne) SetYellow106To120Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetYellow106To120Percentage(s)
	return tcuo
}

// SetNillableYellow106To120Percentage sets the "yellow106To120Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableYellow106To120Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetYellow106To120Percentage(*s)
	}
	return tcuo
}

// ClearYellow106To120Percentage clears the value of the "yellow106To120Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearYellow106To120Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearYellow106To120Percentage()
	return tcuo
}

// SetRed0To15Total sets the "red0To15Total" field.
func (tcuo *TSCardsUpdateOne) SetRed0To15Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed0To15Total()
	tcuo.mutation.SetRed0To15Total(i)
	return tcuo
}

// SetNillableRed0To15Total sets the "red0To15Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed0To15Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed0To15Total(*i)
	}
	return tcuo
}

// AddRed0To15Total adds i to the "red0To15Total" field.
func (tcuo *TSCardsUpdateOne) AddRed0To15Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed0To15Total(i)
	return tcuo
}

// ClearRed0To15Total clears the value of the "red0To15Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed0To15Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed0To15Total()
	return tcuo
}

// SetRed0To15Percentage sets the "red0To15Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed0To15Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed0To15Percentage(s)
	return tcuo
}

// SetNillableRed0To15Percentage sets the "red0To15Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed0To15Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed0To15Percentage(*s)
	}
	return tcuo
}

// ClearRed0To15Percentage clears the value of the "red0To15Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed0To15Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed0To15Percentage()
	return tcuo
}

// SetRed16To30Total sets the "red16To30Total" field.
func (tcuo *TSCardsUpdateOne) SetRed16To30Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed16To30Total()
	tcuo.mutation.SetRed16To30Total(i)
	return tcuo
}

// SetNillableRed16To30Total sets the "red16To30Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed16To30Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed16To30Total(*i)
	}
	return tcuo
}

// AddRed16To30Total adds i to the "red16To30Total" field.
func (tcuo *TSCardsUpdateOne) AddRed16To30Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed16To30Total(i)
	return tcuo
}

// ClearRed16To30Total clears the value of the "red16To30Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed16To30Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed16To30Total()
	return tcuo
}

// SetRed16To30Percentage sets the "red16To30Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed16To30Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed16To30Percentage(s)
	return tcuo
}

// SetNillableRed16To30Percentage sets the "red16To30Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed16To30Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed16To30Percentage(*s)
	}
	return tcuo
}

// ClearRed16To30Percentage clears the value of the "red16To30Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed16To30Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed16To30Percentage()
	return tcuo
}

// SetRed31To45Total sets the "red31To45Total" field.
func (tcuo *TSCardsUpdateOne) SetRed31To45Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed31To45Total()
	tcuo.mutation.SetRed31To45Total(i)
	return tcuo
}

// SetNillableRed31To45Total sets the "red31To45Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed31To45Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed31To45Total(*i)
	}
	return tcuo
}

// AddRed31To45Total adds i to the "red31To45Total" field.
func (tcuo *TSCardsUpdateOne) AddRed31To45Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed31To45Total(i)
	return tcuo
}

// ClearRed31To45Total clears the value of the "red31To45Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed31To45Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed31To45Total()
	return tcuo
}

// SetRed31To45Percentage sets the "red31To45Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed31To45Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed31To45Percentage(s)
	return tcuo
}

// SetNillableRed31To45Percentage sets the "red31To45Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed31To45Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed31To45Percentage(*s)
	}
	return tcuo
}

// ClearRed31To45Percentage clears the value of the "red31To45Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed31To45Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed31To45Percentage()
	return tcuo
}

// SetRed46To60Total sets the "red46To60Total" field.
func (tcuo *TSCardsUpdateOne) SetRed46To60Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed46To60Total()
	tcuo.mutation.SetRed46To60Total(i)
	return tcuo
}

// SetNillableRed46To60Total sets the "red46To60Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed46To60Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed46To60Total(*i)
	}
	return tcuo
}

// AddRed46To60Total adds i to the "red46To60Total" field.
func (tcuo *TSCardsUpdateOne) AddRed46To60Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed46To60Total(i)
	return tcuo
}

// ClearRed46To60Total clears the value of the "red46To60Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed46To60Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed46To60Total()
	return tcuo
}

// SetRed46To60Percentage sets the "red46To60Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed46To60Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed46To60Percentage(s)
	return tcuo
}

// SetNillableRed46To60Percentage sets the "red46To60Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed46To60Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed46To60Percentage(*s)
	}
	return tcuo
}

// ClearRed46To60Percentage clears the value of the "red46To60Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed46To60Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed46To60Percentage()
	return tcuo
}

// SetRed61To75Total sets the "red61To75Total" field.
func (tcuo *TSCardsUpdateOne) SetRed61To75Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed61To75Total()
	tcuo.mutation.SetRed61To75Total(i)
	return tcuo
}

// SetNillableRed61To75Total sets the "red61To75Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed61To75Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed61To75Total(*i)
	}
	return tcuo
}

// AddRed61To75Total adds i to the "red61To75Total" field.
func (tcuo *TSCardsUpdateOne) AddRed61To75Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed61To75Total(i)
	return tcuo
}

// ClearRed61To75Total clears the value of the "red61To75Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed61To75Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed61To75Total()
	return tcuo
}

// SetRed61To75Percentage sets the "red61To75Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed61To75Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed61To75Percentage(s)
	return tcuo
}

// SetNillableRed61To75Percentage sets the "red61To75Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed61To75Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed61To75Percentage(*s)
	}
	return tcuo
}

// ClearRed61To75Percentage clears the value of the "red61To75Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed61To75Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed61To75Percentage()
	return tcuo
}

// SetRed76To90Total sets the "red76To90Total" field.
func (tcuo *TSCardsUpdateOne) SetRed76To90Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed76To90Total()
	tcuo.mutation.SetRed76To90Total(i)
	return tcuo
}

// SetNillableRed76To90Total sets the "red76To90Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed76To90Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed76To90Total(*i)
	}
	return tcuo
}

// AddRed76To90Total adds i to the "red76To90Total" field.
func (tcuo *TSCardsUpdateOne) AddRed76To90Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed76To90Total(i)
	return tcuo
}

// ClearRed76To90Total clears the value of the "red76To90Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed76To90Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed76To90Total()
	return tcuo
}

// SetRed76To90Percentage sets the "red76To90Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed76To90Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed76To90Percentage(s)
	return tcuo
}

// SetNillableRed76To90Percentage sets the "red76To90Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed76To90Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed76To90Percentage(*s)
	}
	return tcuo
}

// ClearRed76To90Percentage clears the value of the "red76To90Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed76To90Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed76To90Percentage()
	return tcuo
}

// SetRed91to105Total sets the "red91to105Total" field.
func (tcuo *TSCardsUpdateOne) SetRed91to105Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed91to105Total()
	tcuo.mutation.SetRed91to105Total(i)
	return tcuo
}

// SetNillableRed91to105Total sets the "red91to105Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed91to105Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed91to105Total(*i)
	}
	return tcuo
}

// AddRed91to105Total adds i to the "red91to105Total" field.
func (tcuo *TSCardsUpdateOne) AddRed91to105Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed91to105Total(i)
	return tcuo
}

// ClearRed91to105Total clears the value of the "red91to105Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed91to105Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed91to105Total()
	return tcuo
}

// SetRed91to105Percentage sets the "red91to105Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed91to105Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed91to105Percentage(s)
	return tcuo
}

// SetNillableRed91to105Percentage sets the "red91to105Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed91to105Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed91to105Percentage(*s)
	}
	return tcuo
}

// ClearRed91to105Percentage clears the value of the "red91to105Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed91to105Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed91to105Percentage()
	return tcuo
}

// SetRed106To120Total sets the "red106To120Total" field.
func (tcuo *TSCardsUpdateOne) SetRed106To120Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.ResetRed106To120Total()
	tcuo.mutation.SetRed106To120Total(i)
	return tcuo
}

// SetNillableRed106To120Total sets the "red106To120Total" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed106To120Total(i *int) *TSCardsUpdateOne {
	if i != nil {
		tcuo.SetRed106To120Total(*i)
	}
	return tcuo
}

// AddRed106To120Total adds i to the "red106To120Total" field.
func (tcuo *TSCardsUpdateOne) AddRed106To120Total(i int) *TSCardsUpdateOne {
	tcuo.mutation.AddRed106To120Total(i)
	return tcuo
}

// ClearRed106To120Total clears the value of the "red106To120Total" field.
func (tcuo *TSCardsUpdateOne) ClearRed106To120Total() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed106To120Total()
	return tcuo
}

// SetRed106To120Percentage sets the "red106To120Percentage" field.
func (tcuo *TSCardsUpdateOne) SetRed106To120Percentage(s string) *TSCardsUpdateOne {
	tcuo.mutation.SetRed106To120Percentage(s)
	return tcuo
}

// SetNillableRed106To120Percentage sets the "red106To120Percentage" field if the given value is not nil.
func (tcuo *TSCardsUpdateOne) SetNillableRed106To120Percentage(s *string) *TSCardsUpdateOne {
	if s != nil {
		tcuo.SetRed106To120Percentage(*s)
	}
	return tcuo
}

// ClearRed106To120Percentage clears the value of the "red106To120Percentage" field.
func (tcuo *TSCardsUpdateOne) ClearRed106To120Percentage() *TSCardsUpdateOne {
	tcuo.mutation.ClearRed106To120Percentage()
	return tcuo
}

// SetLastUpdated sets the "lastUpdated" field.
func (tcuo *TSCardsUpdateOne) SetLastUpdated(t time.Time) *TSCardsUpdateOne {
	tcuo.mutation.SetLastUpdated(t)
	return tcuo
}

// ClearLastUpdated clears the value of the "lastUpdated" field.
func (tcuo *TSCardsUpdateOne) ClearLastUpdated() *TSCardsUpdateOne {
	tcuo.mutation.ClearLastUpdated()
	return tcuo
}

// SetTeamID sets the "team" edge to the Team entity by ID.
func (tcuo *TSCardsUpdateOne) SetTeamID(id int) *TSCardsUpdateOne {
	tcuo.mutation.SetTeamID(id)
	return tcuo
}

// SetTeam sets the "team" edge to the Team entity.
func (tcuo *TSCardsUpdateOne) SetTeam(t *Team) *TSCardsUpdateOne {
	return tcuo.SetTeamID(t.ID)
}

// Mutation returns the TSCardsMutation object of the builder.
func (tcuo *TSCardsUpdateOne) Mutation() *TSCardsMutation {
	return tcuo.mutation
}

// ClearTeam clears the "team" edge to the Team entity.
func (tcuo *TSCardsUpdateOne) ClearTeam() *TSCardsUpdateOne {
	tcuo.mutation.ClearTeam()
	return tcuo
}

// Where appends a list predicates to the TSCardsUpdate builder.
func (tcuo *TSCardsUpdateOne) Where(ps ...predicate.TSCards) *TSCardsUpdateOne {
	tcuo.mutation.Where(ps...)
	return tcuo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (tcuo *TSCardsUpdateOne) Select(field string, fields ...string) *TSCardsUpdateOne {
	tcuo.fields = append([]string{field}, fields...)
	return tcuo
}

// Save executes the query and returns the updated TSCards entity.
func (tcuo *TSCardsUpdateOne) Save(ctx context.Context) (*TSCards, error) {
	tcuo.defaults()
	return withHooks(ctx, tcuo.sqlSave, tcuo.mutation, tcuo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (tcuo *TSCardsUpdateOne) SaveX(ctx context.Context) *TSCards {
	node, err := tcuo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (tcuo *TSCardsUpdateOne) Exec(ctx context.Context) error {
	_, err := tcuo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (tcuo *TSCardsUpdateOne) ExecX(ctx context.Context) {
	if err := tcuo.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (tcuo *TSCardsUpdateOne) defaults() {
	if _, ok := tcuo.mutation.LastUpdated(); !ok && !tcuo.mutation.LastUpdatedCleared() {
		v := tscards.UpdateDefaultLastUpdated()
		tcuo.mutation.SetLastUpdated(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (tcuo *TSCardsUpdateOne) check() error {
	if _, ok := tcuo.mutation.TeamID(); tcuo.mutation.TeamCleared() && !ok {
		return errors.New(`ent: clearing a required unique edge "TSCards.team"`)
	}
	return nil
}

func (tcuo *TSCardsUpdateOne) sqlSave(ctx context.Context) (_node *TSCards, err error) {
	if err := tcuo.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(tscards.Table, tscards.Columns, sqlgraph.NewFieldSpec(tscards.FieldID, field.TypeInt))
	id, ok := tcuo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "TSCards.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := tcuo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, tscards.FieldID)
		for _, f := range fields {
			if !tscards.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != tscards.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := tcuo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := tcuo.mutation.Yellow0To15Total(); ok {
		_spec.SetField(tscards.FieldYellow0To15Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow0To15Total(); ok {
		_spec.AddField(tscards.FieldYellow0To15Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow0To15TotalCleared() {
		_spec.ClearField(tscards.FieldYellow0To15Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow0To15Percentage(); ok {
		_spec.SetField(tscards.FieldYellow0To15Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow0To15PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow0To15Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow16To30Total(); ok {
		_spec.SetField(tscards.FieldYellow16To30Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow16To30Total(); ok {
		_spec.AddField(tscards.FieldYellow16To30Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow16To30TotalCleared() {
		_spec.ClearField(tscards.FieldYellow16To30Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow16To30Percentage(); ok {
		_spec.SetField(tscards.FieldYellow16To30Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow16To30PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow16To30Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow31To45Total(); ok {
		_spec.SetField(tscards.FieldYellow31To45Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow31To45Total(); ok {
		_spec.AddField(tscards.FieldYellow31To45Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow31To45TotalCleared() {
		_spec.ClearField(tscards.FieldYellow31To45Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow31To45Percentage(); ok {
		_spec.SetField(tscards.FieldYellow31To45Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow31To45PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow31To45Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow46To60Total(); ok {
		_spec.SetField(tscards.FieldYellow46To60Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow46To60Total(); ok {
		_spec.AddField(tscards.FieldYellow46To60Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow46To60TotalCleared() {
		_spec.ClearField(tscards.FieldYellow46To60Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow46To60Percentage(); ok {
		_spec.SetField(tscards.FieldYellow46To60Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow46To60PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow46To60Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow61To75Total(); ok {
		_spec.SetField(tscards.FieldYellow61To75Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow61To75Total(); ok {
		_spec.AddField(tscards.FieldYellow61To75Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow61To75TotalCleared() {
		_spec.ClearField(tscards.FieldYellow61To75Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow61To75Percentage(); ok {
		_spec.SetField(tscards.FieldYellow61To75Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow61To75PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow61To75Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow76To90Total(); ok {
		_spec.SetField(tscards.FieldYellow76To90Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow76To90Total(); ok {
		_spec.AddField(tscards.FieldYellow76To90Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow76To90TotalCleared() {
		_spec.ClearField(tscards.FieldYellow76To90Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow76To90Percentage(); ok {
		_spec.SetField(tscards.FieldYellow76To90Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow76To90PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow76To90Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow91to105Total(); ok {
		_spec.SetField(tscards.FieldYellow91to105Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow91to105Total(); ok {
		_spec.AddField(tscards.FieldYellow91to105Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow91to105TotalCleared() {
		_spec.ClearField(tscards.FieldYellow91to105Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow91to105Percentage(); ok {
		_spec.SetField(tscards.FieldYellow91to105Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow91to105PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow91to105Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Yellow106To120Total(); ok {
		_spec.SetField(tscards.FieldYellow106To120Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedYellow106To120Total(); ok {
		_spec.AddField(tscards.FieldYellow106To120Total, field.TypeInt, value)
	}
	if tcuo.mutation.Yellow106To120TotalCleared() {
		_spec.ClearField(tscards.FieldYellow106To120Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Yellow106To120Percentage(); ok {
		_spec.SetField(tscards.FieldYellow106To120Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Yellow106To120PercentageCleared() {
		_spec.ClearField(tscards.FieldYellow106To120Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red0To15Total(); ok {
		_spec.SetField(tscards.FieldRed0To15Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed0To15Total(); ok {
		_spec.AddField(tscards.FieldRed0To15Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red0To15TotalCleared() {
		_spec.ClearField(tscards.FieldRed0To15Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red0To15Percentage(); ok {
		_spec.SetField(tscards.FieldRed0To15Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red0To15PercentageCleared() {
		_spec.ClearField(tscards.FieldRed0To15Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red16To30Total(); ok {
		_spec.SetField(tscards.FieldRed16To30Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed16To30Total(); ok {
		_spec.AddField(tscards.FieldRed16To30Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red16To30TotalCleared() {
		_spec.ClearField(tscards.FieldRed16To30Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red16To30Percentage(); ok {
		_spec.SetField(tscards.FieldRed16To30Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red16To30PercentageCleared() {
		_spec.ClearField(tscards.FieldRed16To30Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red31To45Total(); ok {
		_spec.SetField(tscards.FieldRed31To45Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed31To45Total(); ok {
		_spec.AddField(tscards.FieldRed31To45Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red31To45TotalCleared() {
		_spec.ClearField(tscards.FieldRed31To45Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red31To45Percentage(); ok {
		_spec.SetField(tscards.FieldRed31To45Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red31To45PercentageCleared() {
		_spec.ClearField(tscards.FieldRed31To45Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red46To60Total(); ok {
		_spec.SetField(tscards.FieldRed46To60Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed46To60Total(); ok {
		_spec.AddField(tscards.FieldRed46To60Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red46To60TotalCleared() {
		_spec.ClearField(tscards.FieldRed46To60Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red46To60Percentage(); ok {
		_spec.SetField(tscards.FieldRed46To60Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red46To60PercentageCleared() {
		_spec.ClearField(tscards.FieldRed46To60Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red61To75Total(); ok {
		_spec.SetField(tscards.FieldRed61To75Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed61To75Total(); ok {
		_spec.AddField(tscards.FieldRed61To75Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red61To75TotalCleared() {
		_spec.ClearField(tscards.FieldRed61To75Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red61To75Percentage(); ok {
		_spec.SetField(tscards.FieldRed61To75Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red61To75PercentageCleared() {
		_spec.ClearField(tscards.FieldRed61To75Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red76To90Total(); ok {
		_spec.SetField(tscards.FieldRed76To90Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed76To90Total(); ok {
		_spec.AddField(tscards.FieldRed76To90Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red76To90TotalCleared() {
		_spec.ClearField(tscards.FieldRed76To90Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red76To90Percentage(); ok {
		_spec.SetField(tscards.FieldRed76To90Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red76To90PercentageCleared() {
		_spec.ClearField(tscards.FieldRed76To90Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red91to105Total(); ok {
		_spec.SetField(tscards.FieldRed91to105Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed91to105Total(); ok {
		_spec.AddField(tscards.FieldRed91to105Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red91to105TotalCleared() {
		_spec.ClearField(tscards.FieldRed91to105Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red91to105Percentage(); ok {
		_spec.SetField(tscards.FieldRed91to105Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red91to105PercentageCleared() {
		_spec.ClearField(tscards.FieldRed91to105Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.Red106To120Total(); ok {
		_spec.SetField(tscards.FieldRed106To120Total, field.TypeInt, value)
	}
	if value, ok := tcuo.mutation.AddedRed106To120Total(); ok {
		_spec.AddField(tscards.FieldRed106To120Total, field.TypeInt, value)
	}
	if tcuo.mutation.Red106To120TotalCleared() {
		_spec.ClearField(tscards.FieldRed106To120Total, field.TypeInt)
	}
	if value, ok := tcuo.mutation.Red106To120Percentage(); ok {
		_spec.SetField(tscards.FieldRed106To120Percentage, field.TypeString, value)
	}
	if tcuo.mutation.Red106To120PercentageCleared() {
		_spec.ClearField(tscards.FieldRed106To120Percentage, field.TypeString)
	}
	if value, ok := tcuo.mutation.LastUpdated(); ok {
		_spec.SetField(tscards.FieldLastUpdated, field.TypeTime, value)
	}
	if tcuo.mutation.LastUpdatedCleared() {
		_spec.ClearField(tscards.FieldLastUpdated, field.TypeTime)
	}
	if tcuo.mutation.TeamCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   tscards.TeamTable,
			Columns: []string{tscards.TeamColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(team.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := tcuo.mutation.TeamIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: true,
			Table:   tscards.TeamTable,
			Columns: []string{tscards.TeamColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(team.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	_node = &TSCards{config: tcuo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, tcuo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{tscards.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	tcuo.mutation.done = true
	return _node, nil
}
