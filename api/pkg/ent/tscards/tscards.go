// Code generated by ent, DO NOT EDIT.

package tscards

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the tscards type in the database.
	Label = "ts_cards"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldYellow0To15Total holds the string denoting the yellow0to15total field in the database.
	FieldYellow0To15Total = "yellow0to15total"
	// FieldYellow0To15Percentage holds the string denoting the yellow0to15percentage field in the database.
	FieldYellow0To15Percentage = "yellow0to15percentage"
	// FieldYellow16To30Total holds the string denoting the yellow16to30total field in the database.
	FieldYellow16To30Total = "yellow16to30total"
	// FieldYellow16To30Percentage holds the string denoting the yellow16to30percentage field in the database.
	FieldYellow16To30Percentage = "yellow16to30percentage"
	// FieldYellow31To45Total holds the string denoting the yellow31to45total field in the database.
	FieldYellow31To45Total = "yellow31to45total"
	// FieldYellow31To45Percentage holds the string denoting the yellow31to45percentage field in the database.
	FieldYellow31To45Percentage = "yellow31to45percentage"
	// FieldYellow46To60Total holds the string denoting the yellow46to60total field in the database.
	FieldYellow46To60Total = "yellow46to60total"
	// FieldYellow46To60Percentage holds the string denoting the yellow46to60percentage field in the database.
	FieldYellow46To60Percentage = "yellow46to60percentage"
	// FieldYellow61To75Total holds the string denoting the yellow61to75total field in the database.
	FieldYellow61To75Total = "yellow61to75total"
	// FieldYellow61To75Percentage holds the string denoting the yellow61to75percentage field in the database.
	FieldYellow61To75Percentage = "yellow61to75percentage"
	// FieldYellow76To90Total holds the string denoting the yellow76to90total field in the database.
	FieldYellow76To90Total = "yellow76to90total"
	// FieldYellow76To90Percentage holds the string denoting the yellow76to90percentage field in the database.
	FieldYellow76To90Percentage = "yellow76to90percentage"
	// FieldYellow91to105Total holds the string denoting the yellow91to105total field in the database.
	FieldYellow91to105Total = "yellow91to105total"
	// FieldYellow91to105Percentage holds the string denoting the yellow91to105percentage field in the database.
	FieldYellow91to105Percentage = "yellow91to105percentage"
	// FieldYellow106To120Total holds the string denoting the yellow106to120total field in the database.
	FieldYellow106To120Total = "yellow106to120total"
	// FieldYellow106To120Percentage holds the string denoting the yellow106to120percentage field in the database.
	FieldYellow106To120Percentage = "yellow106to120percentage"
	// FieldRed0To15Total holds the string denoting the red0to15total field in the database.
	FieldRed0To15Total = "red0to15total"
	// FieldRed0To15Percentage holds the string denoting the red0to15percentage field in the database.
	FieldRed0To15Percentage = "red0to15percentage"
	// FieldRed16To30Total holds the string denoting the red16to30total field in the database.
	FieldRed16To30Total = "red16to30total"
	// FieldRed16To30Percentage holds the string denoting the red16to30percentage field in the database.
	FieldRed16To30Percentage = "red16to30percentage"
	// FieldRed31To45Total holds the string denoting the red31to45total field in the database.
	FieldRed31To45Total = "red31to45total"
	// FieldRed31To45Percentage holds the string denoting the red31to45percentage field in the database.
	FieldRed31To45Percentage = "red31to45percentage"
	// FieldRed46To60Total holds the string denoting the red46to60total field in the database.
	FieldRed46To60Total = "red46to60total"
	// FieldRed46To60Percentage holds the string denoting the red46to60percentage field in the database.
	FieldRed46To60Percentage = "red46to60percentage"
	// FieldRed61To75Total holds the string denoting the red61to75total field in the database.
	FieldRed61To75Total = "red61to75total"
	// FieldRed61To75Percentage holds the string denoting the red61to75percentage field in the database.
	FieldRed61To75Percentage = "red61to75percentage"
	// FieldRed76To90Total holds the string denoting the red76to90total field in the database.
	FieldRed76To90Total = "red76to90total"
	// FieldRed76To90Percentage holds the string denoting the red76to90percentage field in the database.
	FieldRed76To90Percentage = "red76to90percentage"
	// FieldRed91to105Total holds the string denoting the red91to105total field in the database.
	FieldRed91to105Total = "red91to105total"
	// FieldRed91to105Percentage holds the string denoting the red91to105percentage field in the database.
	FieldRed91to105Percentage = "red91to105percentage"
	// FieldRed106To120Total holds the string denoting the red106to120total field in the database.
	FieldRed106To120Total = "red106to120total"
	// FieldRed106To120Percentage holds the string denoting the red106to120percentage field in the database.
	FieldRed106To120Percentage = "red106to120percentage"
	// FieldLastUpdated holds the string denoting the lastupdated field in the database.
	FieldLastUpdated = "last_updated"
	// EdgeTeam holds the string denoting the team edge name in mutations.
	EdgeTeam = "team"
	// Table holds the table name of the tscards in the database.
	Table = "ts_cards"
	// TeamTable is the table that holds the team relation/edge.
	TeamTable = "ts_cards"
	// TeamInverseTable is the table name for the Team entity.
	// It exists in this package in order to avoid circular dependency with the "team" package.
	TeamInverseTable = "teams"
	// TeamColumn is the table column denoting the team relation/edge.
	TeamColumn = "team_cards_stats"
)

// Columns holds all SQL columns for tscards fields.
var Columns = []string{
	FieldID,
	FieldYellow0To15Total,
	FieldYellow0To15Percentage,
	FieldYellow16To30Total,
	FieldYellow16To30Percentage,
	FieldYellow31To45Total,
	FieldYellow31To45Percentage,
	FieldYellow46To60Total,
	FieldYellow46To60Percentage,
	FieldYellow61To75Total,
	FieldYellow61To75Percentage,
	FieldYellow76To90Total,
	FieldYellow76To90Percentage,
	FieldYellow91to105Total,
	FieldYellow91to105Percentage,
	FieldYellow106To120Total,
	FieldYellow106To120Percentage,
	FieldRed0To15Total,
	FieldRed0To15Percentage,
	FieldRed16To30Total,
	FieldRed16To30Percentage,
	FieldRed31To45Total,
	FieldRed31To45Percentage,
	FieldRed46To60Total,
	FieldRed46To60Percentage,
	FieldRed61To75Total,
	FieldRed61To75Percentage,
	FieldRed76To90Total,
	FieldRed76To90Percentage,
	FieldRed91to105Total,
	FieldRed91to105Percentage,
	FieldRed106To120Total,
	FieldRed106To120Percentage,
	FieldLastUpdated,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "ts_cards"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"team_cards_stats",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultYellow0To15Total holds the default value on creation for the "yellow0To15Total" field.
	DefaultYellow0To15Total int
	// DefaultYellow0To15Percentage holds the default value on creation for the "yellow0To15Percentage" field.
	DefaultYellow0To15Percentage string
	// DefaultYellow16To30Total holds the default value on creation for the "yellow16To30Total" field.
	DefaultYellow16To30Total int
	// DefaultYellow16To30Percentage holds the default value on creation for the "yellow16To30Percentage" field.
	DefaultYellow16To30Percentage string
	// DefaultYellow31To45Total holds the default value on creation for the "yellow31To45Total" field.
	DefaultYellow31To45Total int
	// DefaultYellow31To45Percentage holds the default value on creation for the "yellow31To45Percentage" field.
	DefaultYellow31To45Percentage string
	// DefaultYellow46To60Total holds the default value on creation for the "yellow46To60Total" field.
	DefaultYellow46To60Total int
	// DefaultYellow46To60Percentage holds the default value on creation for the "yellow46To60Percentage" field.
	DefaultYellow46To60Percentage string
	// DefaultYellow61To75Total holds the default value on creation for the "yellow61To75Total" field.
	DefaultYellow61To75Total int
	// DefaultYellow61To75Percentage holds the default value on creation for the "yellow61To75Percentage" field.
	DefaultYellow61To75Percentage string
	// DefaultYellow76To90Total holds the default value on creation for the "yellow76To90Total" field.
	DefaultYellow76To90Total int
	// DefaultYellow76To90Percentage holds the default value on creation for the "yellow76To90Percentage" field.
	DefaultYellow76To90Percentage string
	// DefaultYellow91to105Total holds the default value on creation for the "yellow91to105Total" field.
	DefaultYellow91to105Total int
	// DefaultYellow91to105Percentage holds the default value on creation for the "yellow91to105Percentage" field.
	DefaultYellow91to105Percentage string
	// DefaultYellow106To120Total holds the default value on creation for the "yellow106To120Total" field.
	DefaultYellow106To120Total int
	// DefaultYellow106To120Percentage holds the default value on creation for the "yellow106To120Percentage" field.
	DefaultYellow106To120Percentage string
	// DefaultRed0To15Total holds the default value on creation for the "red0To15Total" field.
	DefaultRed0To15Total int
	// DefaultRed0To15Percentage holds the default value on creation for the "red0To15Percentage" field.
	DefaultRed0To15Percentage string
	// DefaultRed16To30Total holds the default value on creation for the "red16To30Total" field.
	DefaultRed16To30Total int
	// DefaultRed16To30Percentage holds the default value on creation for the "red16To30Percentage" field.
	DefaultRed16To30Percentage string
	// DefaultRed31To45Total holds the default value on creation for the "red31To45Total" field.
	DefaultRed31To45Total int
	// DefaultRed31To45Percentage holds the default value on creation for the "red31To45Percentage" field.
	DefaultRed31To45Percentage string
	// DefaultRed46To60Total holds the default value on creation for the "red46To60Total" field.
	DefaultRed46To60Total int
	// DefaultRed46To60Percentage holds the default value on creation for the "red46To60Percentage" field.
	DefaultRed46To60Percentage string
	// DefaultRed61To75Total holds the default value on creation for the "red61To75Total" field.
	DefaultRed61To75Total int
	// DefaultRed61To75Percentage holds the default value on creation for the "red61To75Percentage" field.
	DefaultRed61To75Percentage string
	// DefaultRed76To90Total holds the default value on creation for the "red76To90Total" field.
	DefaultRed76To90Total int
	// DefaultRed76To90Percentage holds the default value on creation for the "red76To90Percentage" field.
	DefaultRed76To90Percentage string
	// DefaultRed91to105Total holds the default value on creation for the "red91to105Total" field.
	DefaultRed91to105Total int
	// DefaultRed91to105Percentage holds the default value on creation for the "red91to105Percentage" field.
	DefaultRed91to105Percentage string
	// DefaultRed106To120Total holds the default value on creation for the "red106To120Total" field.
	DefaultRed106To120Total int
	// DefaultRed106To120Percentage holds the default value on creation for the "red106To120Percentage" field.
	DefaultRed106To120Percentage string
	// DefaultLastUpdated holds the default value on creation for the "lastUpdated" field.
	DefaultLastUpdated func() time.Time
	// UpdateDefaultLastUpdated holds the default value on update for the "lastUpdated" field.
	UpdateDefaultLastUpdated func() time.Time
)

// OrderOption defines the ordering options for the TSCards queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByYellow0To15Total orders the results by the yellow0To15Total field.
func ByYellow0To15Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow0To15Total, opts...).ToFunc()
}

// ByYellow0To15Percentage orders the results by the yellow0To15Percentage field.
func ByYellow0To15Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow0To15Percentage, opts...).ToFunc()
}

// ByYellow16To30Total orders the results by the yellow16To30Total field.
func ByYellow16To30Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow16To30Total, opts...).ToFunc()
}

// ByYellow16To30Percentage orders the results by the yellow16To30Percentage field.
func ByYellow16To30Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow16To30Percentage, opts...).ToFunc()
}

// ByYellow31To45Total orders the results by the yellow31To45Total field.
func ByYellow31To45Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow31To45Total, opts...).ToFunc()
}

// ByYellow31To45Percentage orders the results by the yellow31To45Percentage field.
func ByYellow31To45Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow31To45Percentage, opts...).ToFunc()
}

// ByYellow46To60Total orders the results by the yellow46To60Total field.
func ByYellow46To60Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow46To60Total, opts...).ToFunc()
}

// ByYellow46To60Percentage orders the results by the yellow46To60Percentage field.
func ByYellow46To60Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow46To60Percentage, opts...).ToFunc()
}

// ByYellow61To75Total orders the results by the yellow61To75Total field.
func ByYellow61To75Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow61To75Total, opts...).ToFunc()
}

// ByYellow61To75Percentage orders the results by the yellow61To75Percentage field.
func ByYellow61To75Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow61To75Percentage, opts...).ToFunc()
}

// ByYellow76To90Total orders the results by the yellow76To90Total field.
func ByYellow76To90Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow76To90Total, opts...).ToFunc()
}

// ByYellow76To90Percentage orders the results by the yellow76To90Percentage field.
func ByYellow76To90Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow76To90Percentage, opts...).ToFunc()
}

// ByYellow91to105Total orders the results by the yellow91to105Total field.
func ByYellow91to105Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow91to105Total, opts...).ToFunc()
}

// ByYellow91to105Percentage orders the results by the yellow91to105Percentage field.
func ByYellow91to105Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow91to105Percentage, opts...).ToFunc()
}

// ByYellow106To120Total orders the results by the yellow106To120Total field.
func ByYellow106To120Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow106To120Total, opts...).ToFunc()
}

// ByYellow106To120Percentage orders the results by the yellow106To120Percentage field.
func ByYellow106To120Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYellow106To120Percentage, opts...).ToFunc()
}

// ByRed0To15Total orders the results by the red0To15Total field.
func ByRed0To15Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed0To15Total, opts...).ToFunc()
}

// ByRed0To15Percentage orders the results by the red0To15Percentage field.
func ByRed0To15Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed0To15Percentage, opts...).ToFunc()
}

// ByRed16To30Total orders the results by the red16To30Total field.
func ByRed16To30Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed16To30Total, opts...).ToFunc()
}

// ByRed16To30Percentage orders the results by the red16To30Percentage field.
func ByRed16To30Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed16To30Percentage, opts...).ToFunc()
}

// ByRed31To45Total orders the results by the red31To45Total field.
func ByRed31To45Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed31To45Total, opts...).ToFunc()
}

// ByRed31To45Percentage orders the results by the red31To45Percentage field.
func ByRed31To45Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed31To45Percentage, opts...).ToFunc()
}

// ByRed46To60Total orders the results by the red46To60Total field.
func ByRed46To60Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed46To60Total, opts...).ToFunc()
}

// ByRed46To60Percentage orders the results by the red46To60Percentage field.
func ByRed46To60Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed46To60Percentage, opts...).ToFunc()
}

// ByRed61To75Total orders the results by the red61To75Total field.
func ByRed61To75Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed61To75Total, opts...).ToFunc()
}

// ByRed61To75Percentage orders the results by the red61To75Percentage field.
func ByRed61To75Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed61To75Percentage, opts...).ToFunc()
}

// ByRed76To90Total orders the results by the red76To90Total field.
func ByRed76To90Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed76To90Total, opts...).ToFunc()
}

// ByRed76To90Percentage orders the results by the red76To90Percentage field.
func ByRed76To90Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed76To90Percentage, opts...).ToFunc()
}

// ByRed91to105Total orders the results by the red91to105Total field.
func ByRed91to105Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed91to105Total, opts...).ToFunc()
}

// ByRed91to105Percentage orders the results by the red91to105Percentage field.
func ByRed91to105Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed91to105Percentage, opts...).ToFunc()
}

// ByRed106To120Total orders the results by the red106To120Total field.
func ByRed106To120Total(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed106To120Total, opts...).ToFunc()
}

// ByRed106To120Percentage orders the results by the red106To120Percentage field.
func ByRed106To120Percentage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRed106To120Percentage, opts...).ToFunc()
}

// ByLastUpdated orders the results by the lastUpdated field.
func ByLastUpdated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastUpdated, opts...).ToFunc()
}

// ByTeamField orders the results by team field.
func ByTeamField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newTeamStep(), sql.OrderByField(field, opts...))
	}
}
func newTeamStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(TeamInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2O, true, TeamTable, TeamColumn),
	)
}
