// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BirthsColumns holds the columns for the "births" table.
	BirthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "place", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
	}
	// BirthsTable holds the schema information for the "births" table.
	BirthsTable = &schema.Table{
		Name:       "births",
		Columns:    BirthsColumns,
		PrimaryKey: []*schema.Column{BirthsColumns[0]},
	}
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "api_football_id", Type: field.TypeInt, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Size: 3},
		{Name: "founded", Type: field.TypeInt},
		{Name: "national", Type: field.TypeBool},
		{Name: "logo", Type: field.TypeString},
		{Name: "country_clubs", Type: field.TypeInt, Nullable: true},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:       "clubs",
		Columns:    ClubsColumns,
		PrimaryKey: []*schema.Column{ClubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "clubs_countries_clubs",
				Columns:    []*schema.Column{ClubsColumns[8]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CoachesColumns holds the columns for the "coaches" table.
	CoachesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "football_api_id", Type: field.TypeInt, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "photo", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
	}
	// CoachesTable holds the schema information for the "coaches" table.
	CoachesTable = &schema.Table{
		Name:       "coaches",
		Columns:    CoachesColumns,
		PrimaryKey: []*schema.Column{CoachesColumns[0]},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Size: 3},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "flag", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// FixturesColumns holds the columns for the "fixtures" table.
	FixturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "api_football_id", Type: field.TypeInt, Unique: true},
		{Name: "referee", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "elapsed", Type: field.TypeInt, Nullable: true},
		{Name: "round", Type: field.TypeInt, Nullable: true},
		{Name: "status", Type: field.TypeString},
		{Name: "home_team_score", Type: field.TypeInt, Nullable: true},
		{Name: "away_team_score", Type: field.TypeInt, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "season_fixtures", Type: field.TypeInt},
		{Name: "team_home_fixtures", Type: field.TypeInt},
		{Name: "team_away_fixtures", Type: field.TypeInt},
	}
	// FixturesTable holds the schema information for the "fixtures" table.
	FixturesTable = &schema.Table{
		Name:       "fixtures",
		Columns:    FixturesColumns,
		PrimaryKey: []*schema.Column{FixturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixtures_seasons_fixtures",
				Columns:    []*schema.Column{FixturesColumns[12]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixtures_teams_homeFixtures",
				Columns:    []*schema.Column{FixturesColumns[13]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixtures_teams_awayFixtures",
				Columns:    []*schema.Column{FixturesColumns[14]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FixtureEventsColumns holds the columns for the "fixture_events" table.
	FixtureEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "elapsed_time", Type: field.TypeInt},
		{Name: "extra_time", Type: field.TypeInt, Nullable: true},
		{Name: "type", Type: field.TypeString},
		{Name: "detail", Type: field.TypeString},
		{Name: "comments", Type: field.TypeString, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "fixture_fixture_events", Type: field.TypeInt},
		{Name: "player_player_events", Type: field.TypeInt},
		{Name: "player_assist_events", Type: field.TypeInt, Nullable: true},
		{Name: "player_stats_player_events", Type: field.TypeInt, Nullable: true},
		{Name: "player_stats_assist_events", Type: field.TypeInt, Nullable: true},
		{Name: "team_team_fixture_events", Type: field.TypeInt},
	}
	// FixtureEventsTable holds the schema information for the "fixture_events" table.
	FixtureEventsTable = &schema.Table{
		Name:       "fixture_events",
		Columns:    FixtureEventsColumns,
		PrimaryKey: []*schema.Column{FixtureEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixture_events_fixtures_fixtureEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[7]},
				RefColumns: []*schema.Column{FixturesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixture_events_players_playerEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[8]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixture_events_players_assistEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[9]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixture_events_player_stats_playerEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[10]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixture_events_player_stats_assistEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[11]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "fixture_events_teams_teamFixtureEvents",
				Columns:    []*schema.Column{FixtureEventsColumns[12]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FixtureLineupsColumns holds the columns for the "fixture_lineups" table.
	FixtureLineupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "formation", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "fixture_lineups", Type: field.TypeInt},
		{Name: "team_fixture_lineups", Type: field.TypeInt},
	}
	// FixtureLineupsTable holds the schema information for the "fixture_lineups" table.
	FixtureLineupsTable = &schema.Table{
		Name:       "fixture_lineups",
		Columns:    FixtureLineupsColumns,
		PrimaryKey: []*schema.Column{FixtureLineupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "fixture_lineups_fixtures_lineups",
				Columns:    []*schema.Column{FixtureLineupsColumns[3]},
				RefColumns: []*schema.Column{FixturesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "fixture_lineups_teams_fixtureLineups",
				Columns:    []*schema.Column{FixtureLineupsColumns[4]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LeaguesColumns holds the columns for the "leagues" table.
	LeaguesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "football_api_id", Type: field.TypeInt, Unique: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"League", "Cup", "Tournament", "Friendly"}},
		{Name: "logo", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "country_leagues", Type: field.TypeInt, Nullable: true},
	}
	// LeaguesTable holds the schema information for the "leagues" table.
	LeaguesTable = &schema.Table{
		Name:       "leagues",
		Columns:    LeaguesColumns,
		PrimaryKey: []*schema.Column{LeaguesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "leagues_countries_leagues",
				Columns:    []*schema.Column{LeaguesColumns[7]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MatchPlayersColumns holds the columns for the "match_players" table.
	MatchPlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number", Type: field.TypeInt},
		{Name: "position", Type: field.TypeString, Nullable: true},
		{Name: "x", Type: field.TypeInt, Nullable: true},
		{Name: "y", Type: field.TypeInt, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "fixture_lineups_lineup_player", Type: field.TypeInt},
		{Name: "player_match_player", Type: field.TypeInt},
		{Name: "player_stats_match_player", Type: field.TypeInt, Nullable: true},
	}
	// MatchPlayersTable holds the schema information for the "match_players" table.
	MatchPlayersTable = &schema.Table{
		Name:       "match_players",
		Columns:    MatchPlayersColumns,
		PrimaryKey: []*schema.Column{MatchPlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "match_players_fixture_lineups_lineupPlayer",
				Columns:    []*schema.Column{MatchPlayersColumns[6]},
				RefColumns: []*schema.Column{FixtureLineupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "match_players_players_matchPlayer",
				Columns:    []*schema.Column{MatchPlayersColumns[7]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "match_players_player_stats_matchPlayer",
				Columns:    []*schema.Column{MatchPlayersColumns[8]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PsDefensesColumns holds the columns for the "ps_defenses" table.
	PsDefensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tackles_total", Type: field.TypeInt},
		{Name: "blocks", Type: field.TypeInt, Default: 0},
		{Name: "interceptions", Type: field.TypeInt},
		{Name: "total_duels", Type: field.TypeInt},
		{Name: "won_duels", Type: field.TypeInt},
	}
	// PsDefensesTable holds the schema information for the "ps_defenses" table.
	PsDefensesTable = &schema.Table{
		Name:       "ps_defenses",
		Columns:    PsDefensesColumns,
		PrimaryKey: []*schema.Column{PsDefensesColumns[0]},
	}
	// PsGamesColumns holds the columns for the "ps_games" table.
	PsGamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "appearences", Type: field.TypeInt},
		{Name: "lineups", Type: field.TypeInt},
		{Name: "minutes", Type: field.TypeInt},
		{Name: "number", Type: field.TypeInt},
		{Name: "position", Type: field.TypeString},
		{Name: "rating", Type: field.TypeString},
		{Name: "captain", Type: field.TypeBool},
	}
	// PsGamesTable holds the schema information for the "ps_games" table.
	PsGamesTable = &schema.Table{
		Name:       "ps_games",
		Columns:    PsGamesColumns,
		PrimaryKey: []*schema.Column{PsGamesColumns[0]},
	}
	// PsGoalsColumns holds the columns for the "ps_goals" table.
	PsGoalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total_goals", Type: field.TypeInt},
		{Name: "conceded_goals", Type: field.TypeInt},
		{Name: "assist_goals", Type: field.TypeInt},
		{Name: "save_goals", Type: field.TypeInt, Default: 0},
		{Name: "shots_total", Type: field.TypeInt},
		{Name: "shots_on", Type: field.TypeInt},
	}
	// PsGoalsTable holds the schema information for the "ps_goals" table.
	PsGoalsTable = &schema.Table{
		Name:       "ps_goals",
		Columns:    PsGoalsColumns,
		PrimaryKey: []*schema.Column{PsGoalsColumns[0]},
	}
	// PsOffensesColumns holds the columns for the "ps_offenses" table.
	PsOffensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dribble_attempts", Type: field.TypeInt},
		{Name: "dribble_success", Type: field.TypeInt},
		{Name: "dribble_past", Type: field.TypeInt, Default: 0},
		{Name: "passes_total", Type: field.TypeInt},
		{Name: "passes_key", Type: field.TypeInt},
		{Name: "passes_accuracy", Type: field.TypeInt},
	}
	// PsOffensesTable holds the schema information for the "ps_offenses" table.
	PsOffensesTable = &schema.Table{
		Name:       "ps_offenses",
		Columns:    PsOffensesColumns,
		PrimaryKey: []*schema.Column{PsOffensesColumns[0]},
	}
	// PsPenaltiesColumns holds the columns for the "ps_penalties" table.
	PsPenaltiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "fouls_drawn", Type: field.TypeInt},
		{Name: "fouls_committed", Type: field.TypeInt},
		{Name: "cards_yellow", Type: field.TypeInt},
		{Name: "card_yellowred", Type: field.TypeInt},
		{Name: "cards_red", Type: field.TypeInt},
		{Name: "penalty_won", Type: field.TypeInt, Default: 0},
		{Name: "penalty_commited", Type: field.TypeInt, Default: 0},
		{Name: "penalty_scored", Type: field.TypeInt, Default: 0},
		{Name: "penalty_missed", Type: field.TypeInt},
		{Name: "penalty_saved", Type: field.TypeInt, Default: 0},
	}
	// PsPenaltiesTable holds the schema information for the "ps_penalties" table.
	PsPenaltiesTable = &schema.Table{
		Name:       "ps_penalties",
		Columns:    PsPenaltiesColumns,
		PrimaryKey: []*schema.Column{PsPenaltiesColumns[0]},
	}
	// PlayersColumns holds the columns for the "players" table.
	PlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "api_football_id", Type: field.TypeInt, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "firstname", Type: field.TypeString},
		{Name: "lastname", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt},
		{Name: "height", Type: field.TypeString},
		{Name: "weight", Type: field.TypeString},
		{Name: "injured", Type: field.TypeBool},
		{Name: "photo", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "form", Type: field.TypeString, Nullable: true},
		{Name: "birth_player", Type: field.TypeInt, Nullable: true},
		{Name: "country_players", Type: field.TypeInt, Nullable: true},
	}
	// PlayersTable holds the schema information for the "players" table.
	PlayersTable = &schema.Table{
		Name:       "players",
		Columns:    PlayersColumns,
		PrimaryKey: []*schema.Column{PlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "players_births_player",
				Columns:    []*schema.Column{PlayersColumns[13]},
				RefColumns: []*schema.Column{BirthsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "players_countries_players",
				Columns:    []*schema.Column{PlayersColumns[14]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayerStatsColumns holds the columns for the "player_stats" table.
	PlayerStatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "player_player_stats", Type: field.TypeInt, Nullable: true},
	}
	// PlayerStatsTable holds the schema information for the "player_stats" table.
	PlayerStatsTable = &schema.Table{
		Name:       "player_stats",
		Columns:    PlayerStatsColumns,
		PrimaryKey: []*schema.Column{PlayerStatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_players_playerStats",
				Columns:    []*schema.Column{PlayerStatsColumns[3]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SeasonsColumns holds the columns for the "seasons" table.
	SeasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "year", Type: field.TypeInt},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "current", Type: field.TypeBool},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "league_season", Type: field.TypeInt, Nullable: true},
	}
	// SeasonsTable holds the schema information for the "seasons" table.
	SeasonsTable = &schema.Table{
		Name:       "seasons",
		Columns:    SeasonsColumns,
		PrimaryKey: []*schema.Column{SeasonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seasons_leagues_season",
				Columns:    []*schema.Column{SeasonsColumns[7]},
				RefColumns: []*schema.Column{LeaguesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SquadsColumns holds the columns for the "squads" table.
	SquadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "position", Type: field.TypeString},
		{Name: "number", Type: field.TypeInt},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "player_squad", Type: field.TypeInt, Nullable: true},
		{Name: "season_squad", Type: field.TypeInt, Nullable: true},
		{Name: "team_squad", Type: field.TypeInt, Nullable: true},
	}
	// SquadsTable holds the schema information for the "squads" table.
	SquadsTable = &schema.Table{
		Name:       "squads",
		Columns:    SquadsColumns,
		PrimaryKey: []*schema.Column{SquadsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "squads_players_squad",
				Columns:    []*schema.Column{SquadsColumns[4]},
				RefColumns: []*schema.Column{PlayersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "squads_seasons_squad",
				Columns:    []*schema.Column{SquadsColumns[5]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "squads_teams_squad",
				Columns:    []*schema.Column{SquadsColumns[6]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StandingsColumns holds the columns for the "standings" table.
	StandingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rank", Type: field.TypeInt},
		{Name: "points", Type: field.TypeInt, Default: 0},
		{Name: "goals_diff", Type: field.TypeInt, Default: 0},
		{Name: "group", Type: field.TypeString, Default: ""},
		{Name: "form", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "all_played", Type: field.TypeInt},
		{Name: "all_win", Type: field.TypeInt},
		{Name: "all_draw", Type: field.TypeInt},
		{Name: "all_lose", Type: field.TypeInt},
		{Name: "all_goals_for", Type: field.TypeInt},
		{Name: "all_goals_against", Type: field.TypeInt},
		{Name: "home_played", Type: field.TypeInt},
		{Name: "home_win", Type: field.TypeInt},
		{Name: "home_draw", Type: field.TypeInt},
		{Name: "home_lose", Type: field.TypeInt},
		{Name: "home_goals_for", Type: field.TypeInt},
		{Name: "home_goals_against", Type: field.TypeInt},
		{Name: "away_played", Type: field.TypeInt},
		{Name: "away_win", Type: field.TypeInt},
		{Name: "away_draw", Type: field.TypeInt},
		{Name: "away_lose", Type: field.TypeInt},
		{Name: "away_goals_for", Type: field.TypeInt},
		{Name: "away_goals_against", Type: field.TypeInt},
		{Name: "last_updated", Type: field.TypeTime},
		{Name: "season_standings", Type: field.TypeInt},
		{Name: "team_standings", Type: field.TypeInt},
	}
	// StandingsTable holds the schema information for the "standings" table.
	StandingsTable = &schema.Table{
		Name:       "standings",
		Columns:    StandingsColumns,
		PrimaryKey: []*schema.Column{StandingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "standings_seasons_standings",
				Columns:    []*schema.Column{StandingsColumns[27]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "standings_teams_standings",
				Columns:    []*schema.Column{StandingsColumns[28]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsBiggestsColumns holds the columns for the "ts_biggests" table.
	TsBiggestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "streak_wins", Type: field.TypeInt, Nullable: true},
		{Name: "streak_losses", Type: field.TypeInt, Nullable: true},
		{Name: "streak_draws", Type: field.TypeInt, Nullable: true},
		{Name: "wins_home", Type: field.TypeString, Nullable: true},
		{Name: "wins_away", Type: field.TypeString, Nullable: true},
		{Name: "losses_home", Type: field.TypeString, Nullable: true},
		{Name: "losses_away", Type: field.TypeString, Nullable: true},
		{Name: "goals_for_home", Type: field.TypeInt, Nullable: true},
		{Name: "goals_for_away", Type: field.TypeInt, Nullable: true},
		{Name: "goals_against_home", Type: field.TypeInt, Nullable: true},
		{Name: "goals_against_away", Type: field.TypeInt, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_biggest_stats", Type: field.TypeInt, Unique: true},
	}
	// TsBiggestsTable holds the schema information for the "ts_biggests" table.
	TsBiggestsTable = &schema.Table{
		Name:       "ts_biggests",
		Columns:    TsBiggestsColumns,
		PrimaryKey: []*schema.Column{TsBiggestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_biggests_teams_biggest_stats",
				Columns:    []*schema.Column{TsBiggestsColumns[13]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsCardsColumns holds the columns for the "ts_cards" table.
	TsCardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "yellow0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "yellow106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "yellow106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "red106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "red106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_cards_stats", Type: field.TypeInt, Unique: true},
	}
	// TsCardsTable holds the schema information for the "ts_cards" table.
	TsCardsTable = &schema.Table{
		Name:       "ts_cards",
		Columns:    TsCardsColumns,
		PrimaryKey: []*schema.Column{TsCardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_cards_teams_cards_stats",
				Columns:    []*schema.Column{TsCardsColumns[34]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsCleanSheetsColumns holds the columns for the "ts_clean_sheets" table.
	TsCleanSheetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_clean_sheet_stats", Type: field.TypeInt, Unique: true},
	}
	// TsCleanSheetsTable holds the schema information for the "ts_clean_sheets" table.
	TsCleanSheetsTable = &schema.Table{
		Name:       "ts_clean_sheets",
		Columns:    TsCleanSheetsColumns,
		PrimaryKey: []*schema.Column{TsCleanSheetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_clean_sheets_teams_clean_sheet_stats",
				Columns:    []*schema.Column{TsCleanSheetsColumns[5]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsFailedToScoresColumns holds the columns for the "ts_failed_to_scores" table.
	TsFailedToScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_failed_to_score_stats", Type: field.TypeInt, Unique: true},
	}
	// TsFailedToScoresTable holds the schema information for the "ts_failed_to_scores" table.
	TsFailedToScoresTable = &schema.Table{
		Name:       "ts_failed_to_scores",
		Columns:    TsFailedToScoresColumns,
		PrimaryKey: []*schema.Column{TsFailedToScoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_failed_to_scores_teams_failed_to_score_stats",
				Columns:    []*schema.Column{TsFailedToScoresColumns[5]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsFixturesColumns holds the columns for the "ts_fixtures" table.
	TsFixturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "played_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "played_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "played_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "wins_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "draws_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "losses_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_fixtures_stats", Type: field.TypeInt, Unique: true},
	}
	// TsFixturesTable holds the schema information for the "ts_fixtures" table.
	TsFixturesTable = &schema.Table{
		Name:       "ts_fixtures",
		Columns:    TsFixturesColumns,
		PrimaryKey: []*schema.Column{TsFixturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_fixtures_teams_fixtures_stats",
				Columns:    []*schema.Column{TsFixturesColumns[14]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsGoalsColumns holds the columns for the "ts_goals" table.
	TsGoalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "goals_for_total_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_total_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_average_home", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_average_away", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_average_total", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_for_minute0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_for_minute106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_for_minute106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_total_home", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_total_away", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_average_home", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_average_away", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_average_total", Type: field.TypeString, Nullable: true, Default: "0.00"},
		{Name: "goals_against_minute0to15total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute0to15percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute16to30total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute16to30percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute31to45total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute31to45percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute46to60total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute46to60percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute61to75total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute61to75percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute76to90total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute76to90percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute91to105total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute91to105percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "goals_against_minute106to120total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "goals_against_minute106to120percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_goals_stats", Type: field.TypeInt, Unique: true},
	}
	// TsGoalsTable holds the schema information for the "ts_goals" table.
	TsGoalsTable = &schema.Table{
		Name:       "ts_goals",
		Columns:    TsGoalsColumns,
		PrimaryKey: []*schema.Column{TsGoalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_goals_teams_goals_stats",
				Columns:    []*schema.Column{TsGoalsColumns[46]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsLineupsColumns holds the columns for the "ts_lineups" table.
	TsLineupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "formation", Type: field.TypeString},
		{Name: "played", Type: field.TypeInt},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_id", Type: field.TypeInt},
	}
	// TsLineupsTable holds the schema information for the "ts_lineups" table.
	TsLineupsTable = &schema.Table{
		Name:       "ts_lineups",
		Columns:    TsLineupsColumns,
		PrimaryKey: []*schema.Column{TsLineupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_lineups_teams_lineups",
				Columns:    []*schema.Column{TsLineupsColumns[4]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TsPenaltiesColumns holds the columns for the "ts_penalties" table.
	TsPenaltiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "scored_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "missed_total", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "scored_percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "missed_percentage", Type: field.TypeString, Nullable: true, Default: "0%"},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "team_penalty_stats", Type: field.TypeInt, Unique: true},
	}
	// TsPenaltiesTable holds the schema information for the "ts_penalties" table.
	TsPenaltiesTable = &schema.Table{
		Name:       "ts_penalties",
		Columns:    TsPenaltiesColumns,
		PrimaryKey: []*schema.Column{TsPenaltiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ts_penalties_teams_penalty_stats",
				Columns:    []*schema.Column{TsPenaltiesColumns[7]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "form", Type: field.TypeString, Nullable: true},
		{Name: "last_updated", Type: field.TypeTime, Nullable: true},
		{Name: "club_team", Type: field.TypeInt},
		{Name: "player_stats_team", Type: field.TypeInt, Nullable: true},
		{Name: "season_teams", Type: field.TypeInt, Nullable: true},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teams_clubs_team",
				Columns:    []*schema.Column{TeamsColumns[3]},
				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "teams_player_stats_team",
				Columns:    []*schema.Column{TeamsColumns[4]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "teams_seasons_teams",
				Columns:    []*schema.Column{TeamsColumns[5]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlayerStatsPsgamesColumns holds the columns for the "player_stats_psgames" table.
	PlayerStatsPsgamesColumns = []*schema.Column{
		{Name: "player_stats_id", Type: field.TypeInt},
		{Name: "ps_games_id", Type: field.TypeInt},
	}
	// PlayerStatsPsgamesTable holds the schema information for the "player_stats_psgames" table.
	PlayerStatsPsgamesTable = &schema.Table{
		Name:       "player_stats_psgames",
		Columns:    PlayerStatsPsgamesColumns,
		PrimaryKey: []*schema.Column{PlayerStatsPsgamesColumns[0], PlayerStatsPsgamesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_psgames_player_stats_id",
				Columns:    []*schema.Column{PlayerStatsPsgamesColumns[0]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_stats_psgames_ps_games_id",
				Columns:    []*schema.Column{PlayerStatsPsgamesColumns[1]},
				RefColumns: []*schema.Column{PsGamesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlayerStatsPsgoalsColumns holds the columns for the "player_stats_psgoals" table.
	PlayerStatsPsgoalsColumns = []*schema.Column{
		{Name: "player_stats_id", Type: field.TypeInt},
		{Name: "ps_goals_id", Type: field.TypeInt},
	}
	// PlayerStatsPsgoalsTable holds the schema information for the "player_stats_psgoals" table.
	PlayerStatsPsgoalsTable = &schema.Table{
		Name:       "player_stats_psgoals",
		Columns:    PlayerStatsPsgoalsColumns,
		PrimaryKey: []*schema.Column{PlayerStatsPsgoalsColumns[0], PlayerStatsPsgoalsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_psgoals_player_stats_id",
				Columns:    []*schema.Column{PlayerStatsPsgoalsColumns[0]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_stats_psgoals_ps_goals_id",
				Columns:    []*schema.Column{PlayerStatsPsgoalsColumns[1]},
				RefColumns: []*schema.Column{PsGoalsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlayerStatsPsdefenseColumns holds the columns for the "player_stats_psdefense" table.
	PlayerStatsPsdefenseColumns = []*schema.Column{
		{Name: "player_stats_id", Type: field.TypeInt},
		{Name: "ps_defense_id", Type: field.TypeInt},
	}
	// PlayerStatsPsdefenseTable holds the schema information for the "player_stats_psdefense" table.
	PlayerStatsPsdefenseTable = &schema.Table{
		Name:       "player_stats_psdefense",
		Columns:    PlayerStatsPsdefenseColumns,
		PrimaryKey: []*schema.Column{PlayerStatsPsdefenseColumns[0], PlayerStatsPsdefenseColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_psdefense_player_stats_id",
				Columns:    []*schema.Column{PlayerStatsPsdefenseColumns[0]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_stats_psdefense_ps_defense_id",
				Columns:    []*schema.Column{PlayerStatsPsdefenseColumns[1]},
				RefColumns: []*schema.Column{PsDefensesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlayerStatsPsoffenseColumns holds the columns for the "player_stats_psoffense" table.
	PlayerStatsPsoffenseColumns = []*schema.Column{
		{Name: "player_stats_id", Type: field.TypeInt},
		{Name: "ps_offense_id", Type: field.TypeInt},
	}
	// PlayerStatsPsoffenseTable holds the schema information for the "player_stats_psoffense" table.
	PlayerStatsPsoffenseTable = &schema.Table{
		Name:       "player_stats_psoffense",
		Columns:    PlayerStatsPsoffenseColumns,
		PrimaryKey: []*schema.Column{PlayerStatsPsoffenseColumns[0], PlayerStatsPsoffenseColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_psoffense_player_stats_id",
				Columns:    []*schema.Column{PlayerStatsPsoffenseColumns[0]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_stats_psoffense_ps_offense_id",
				Columns:    []*schema.Column{PlayerStatsPsoffenseColumns[1]},
				RefColumns: []*schema.Column{PsOffensesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PlayerStatsPspenaltyColumns holds the columns for the "player_stats_pspenalty" table.
	PlayerStatsPspenaltyColumns = []*schema.Column{
		{Name: "player_stats_id", Type: field.TypeInt},
		{Name: "ps_penalty_id", Type: field.TypeInt},
	}
	// PlayerStatsPspenaltyTable holds the schema information for the "player_stats_pspenalty" table.
	PlayerStatsPspenaltyTable = &schema.Table{
		Name:       "player_stats_pspenalty",
		Columns:    PlayerStatsPspenaltyColumns,
		PrimaryKey: []*schema.Column{PlayerStatsPspenaltyColumns[0], PlayerStatsPspenaltyColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_stats_pspenalty_player_stats_id",
				Columns:    []*schema.Column{PlayerStatsPspenaltyColumns[0]},
				RefColumns: []*schema.Column{PlayerStatsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "player_stats_pspenalty_ps_penalty_id",
				Columns:    []*schema.Column{PlayerStatsPspenaltyColumns[1]},
				RefColumns: []*schema.Column{PsPenaltiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BirthsTable,
		ClubsTable,
		CoachesTable,
		CountriesTable,
		FixturesTable,
		FixtureEventsTable,
		FixtureLineupsTable,
		LeaguesTable,
		MatchPlayersTable,
		PsDefensesTable,
		PsGamesTable,
		PsGoalsTable,
		PsOffensesTable,
		PsPenaltiesTable,
		PlayersTable,
		PlayerStatsTable,
		SeasonsTable,
		SquadsTable,
		StandingsTable,
		TsBiggestsTable,
		TsCardsTable,
		TsCleanSheetsTable,
		TsFailedToScoresTable,
		TsFixturesTable,
		TsGoalsTable,
		TsLineupsTable,
		TsPenaltiesTable,
		TeamsTable,
		PlayerStatsPsgamesTable,
		PlayerStatsPsgoalsTable,
		PlayerStatsPsdefenseTable,
		PlayerStatsPsoffenseTable,
		PlayerStatsPspenaltyTable,
	}
)

func init() {
	ClubsTable.ForeignKeys[0].RefTable = CountriesTable
	FixturesTable.ForeignKeys[0].RefTable = SeasonsTable
	FixturesTable.ForeignKeys[1].RefTable = TeamsTable
	FixturesTable.ForeignKeys[2].RefTable = TeamsTable
	FixtureEventsTable.ForeignKeys[0].RefTable = FixturesTable
	FixtureEventsTable.ForeignKeys[1].RefTable = PlayersTable
	FixtureEventsTable.ForeignKeys[2].RefTable = PlayersTable
	FixtureEventsTable.ForeignKeys[3].RefTable = PlayerStatsTable
	FixtureEventsTable.ForeignKeys[4].RefTable = PlayerStatsTable
	FixtureEventsTable.ForeignKeys[5].RefTable = TeamsTable
	FixtureLineupsTable.ForeignKeys[0].RefTable = FixturesTable
	FixtureLineupsTable.ForeignKeys[1].RefTable = TeamsTable
	LeaguesTable.ForeignKeys[0].RefTable = CountriesTable
	MatchPlayersTable.ForeignKeys[0].RefTable = FixtureLineupsTable
	MatchPlayersTable.ForeignKeys[1].RefTable = PlayersTable
	MatchPlayersTable.ForeignKeys[2].RefTable = PlayerStatsTable
	PlayersTable.ForeignKeys[0].RefTable = BirthsTable
	PlayersTable.ForeignKeys[1].RefTable = CountriesTable
	PlayerStatsTable.ForeignKeys[0].RefTable = PlayersTable
	SeasonsTable.ForeignKeys[0].RefTable = LeaguesTable
	SquadsTable.ForeignKeys[0].RefTable = PlayersTable
	SquadsTable.ForeignKeys[1].RefTable = SeasonsTable
	SquadsTable.ForeignKeys[2].RefTable = TeamsTable
	StandingsTable.ForeignKeys[0].RefTable = SeasonsTable
	StandingsTable.ForeignKeys[1].RefTable = TeamsTable
	TsBiggestsTable.ForeignKeys[0].RefTable = TeamsTable
	TsCardsTable.ForeignKeys[0].RefTable = TeamsTable
	TsCleanSheetsTable.ForeignKeys[0].RefTable = TeamsTable
	TsFailedToScoresTable.ForeignKeys[0].RefTable = TeamsTable
	TsFixturesTable.ForeignKeys[0].RefTable = TeamsTable
	TsGoalsTable.ForeignKeys[0].RefTable = TeamsTable
	TsLineupsTable.ForeignKeys[0].RefTable = TeamsTable
	TsPenaltiesTable.ForeignKeys[0].RefTable = TeamsTable
	TeamsTable.ForeignKeys[0].RefTable = ClubsTable
	TeamsTable.ForeignKeys[1].RefTable = PlayerStatsTable
	TeamsTable.ForeignKeys[2].RefTable = SeasonsTable
	PlayerStatsPsgamesTable.ForeignKeys[0].RefTable = PlayerStatsTable
	PlayerStatsPsgamesTable.ForeignKeys[1].RefTable = PsGamesTable
	PlayerStatsPsgoalsTable.ForeignKeys[0].RefTable = PlayerStatsTable
	PlayerStatsPsgoalsTable.ForeignKeys[1].RefTable = PsGoalsTable
	PlayerStatsPsdefenseTable.ForeignKeys[0].RefTable = PlayerStatsTable
	PlayerStatsPsdefenseTable.ForeignKeys[1].RefTable = PsDefensesTable
	PlayerStatsPsoffenseTable.ForeignKeys[0].RefTable = PlayerStatsTable
	PlayerStatsPsoffenseTable.ForeignKeys[1].RefTable = PsOffensesTable
	PlayerStatsPspenaltyTable.ForeignKeys[0].RefTable = PlayerStatsTable
	PlayerStatsPspenaltyTable.ForeignKeys[1].RefTable = PsPenaltiesTable
}
