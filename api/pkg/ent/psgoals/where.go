// Code generated by ent, DO NOT EDIT.

package psgoals

import (
	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/predicate"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldID, id))
}

// TotalGoals applies equality check predicate on the "totalGoals" field. It's identical to TotalGoalsEQ.
func TotalGoals(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldTotalGoals, v))
}

// ConcededGoals applies equality check predicate on the "concededGoals" field. It's identical to ConcededGoalsEQ.
func ConcededGoals(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldConcededGoals, v))
}

// AssistGoals applies equality check predicate on the "assistGoals" field. It's identical to AssistGoalsEQ.
func AssistGoals(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldAssistGoals, v))
}

// SaveGoals applies equality check predicate on the "saveGoals" field. It's identical to SaveGoalsEQ.
func SaveGoals(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldSaveGoals, v))
}

// ShotsTotal applies equality check predicate on the "shotsTotal" field. It's identical to ShotsTotalEQ.
func ShotsTotal(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldShotsTotal, v))
}

// ShotsOn applies equality check predicate on the "shotsOn" field. It's identical to ShotsOnEQ.
func ShotsOn(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldShotsOn, v))
}

// TotalGoalsEQ applies the EQ predicate on the "totalGoals" field.
func TotalGoalsEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldTotalGoals, v))
}

// TotalGoalsNEQ applies the NEQ predicate on the "totalGoals" field.
func TotalGoalsNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldTotalGoals, v))
}

// TotalGoalsIn applies the In predicate on the "totalGoals" field.
func TotalGoalsIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldTotalGoals, vs...))
}

// TotalGoalsNotIn applies the NotIn predicate on the "totalGoals" field.
func TotalGoalsNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldTotalGoals, vs...))
}

// TotalGoalsGT applies the GT predicate on the "totalGoals" field.
func TotalGoalsGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldTotalGoals, v))
}

// TotalGoalsGTE applies the GTE predicate on the "totalGoals" field.
func TotalGoalsGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldTotalGoals, v))
}

// TotalGoalsLT applies the LT predicate on the "totalGoals" field.
func TotalGoalsLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldTotalGoals, v))
}

// TotalGoalsLTE applies the LTE predicate on the "totalGoals" field.
func TotalGoalsLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldTotalGoals, v))
}

// ConcededGoalsEQ applies the EQ predicate on the "concededGoals" field.
func ConcededGoalsEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldConcededGoals, v))
}

// ConcededGoalsNEQ applies the NEQ predicate on the "concededGoals" field.
func ConcededGoalsNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldConcededGoals, v))
}

// ConcededGoalsIn applies the In predicate on the "concededGoals" field.
func ConcededGoalsIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldConcededGoals, vs...))
}

// ConcededGoalsNotIn applies the NotIn predicate on the "concededGoals" field.
func ConcededGoalsNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldConcededGoals, vs...))
}

// ConcededGoalsGT applies the GT predicate on the "concededGoals" field.
func ConcededGoalsGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldConcededGoals, v))
}

// ConcededGoalsGTE applies the GTE predicate on the "concededGoals" field.
func ConcededGoalsGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldConcededGoals, v))
}

// ConcededGoalsLT applies the LT predicate on the "concededGoals" field.
func ConcededGoalsLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldConcededGoals, v))
}

// ConcededGoalsLTE applies the LTE predicate on the "concededGoals" field.
func ConcededGoalsLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldConcededGoals, v))
}

// AssistGoalsEQ applies the EQ predicate on the "assistGoals" field.
func AssistGoalsEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldAssistGoals, v))
}

// AssistGoalsNEQ applies the NEQ predicate on the "assistGoals" field.
func AssistGoalsNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldAssistGoals, v))
}

// AssistGoalsIn applies the In predicate on the "assistGoals" field.
func AssistGoalsIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldAssistGoals, vs...))
}

// AssistGoalsNotIn applies the NotIn predicate on the "assistGoals" field.
func AssistGoalsNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldAssistGoals, vs...))
}

// AssistGoalsGT applies the GT predicate on the "assistGoals" field.
func AssistGoalsGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldAssistGoals, v))
}

// AssistGoalsGTE applies the GTE predicate on the "assistGoals" field.
func AssistGoalsGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldAssistGoals, v))
}

// AssistGoalsLT applies the LT predicate on the "assistGoals" field.
func AssistGoalsLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldAssistGoals, v))
}

// AssistGoalsLTE applies the LTE predicate on the "assistGoals" field.
func AssistGoalsLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldAssistGoals, v))
}

// SaveGoalsEQ applies the EQ predicate on the "saveGoals" field.
func SaveGoalsEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldSaveGoals, v))
}

// SaveGoalsNEQ applies the NEQ predicate on the "saveGoals" field.
func SaveGoalsNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldSaveGoals, v))
}

// SaveGoalsIn applies the In predicate on the "saveGoals" field.
func SaveGoalsIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldSaveGoals, vs...))
}

// SaveGoalsNotIn applies the NotIn predicate on the "saveGoals" field.
func SaveGoalsNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldSaveGoals, vs...))
}

// SaveGoalsGT applies the GT predicate on the "saveGoals" field.
func SaveGoalsGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldSaveGoals, v))
}

// SaveGoalsGTE applies the GTE predicate on the "saveGoals" field.
func SaveGoalsGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldSaveGoals, v))
}

// SaveGoalsLT applies the LT predicate on the "saveGoals" field.
func SaveGoalsLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldSaveGoals, v))
}

// SaveGoalsLTE applies the LTE predicate on the "saveGoals" field.
func SaveGoalsLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldSaveGoals, v))
}

// ShotsTotalEQ applies the EQ predicate on the "shotsTotal" field.
func ShotsTotalEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldShotsTotal, v))
}

// ShotsTotalNEQ applies the NEQ predicate on the "shotsTotal" field.
func ShotsTotalNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldShotsTotal, v))
}

// ShotsTotalIn applies the In predicate on the "shotsTotal" field.
func ShotsTotalIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldShotsTotal, vs...))
}

// ShotsTotalNotIn applies the NotIn predicate on the "shotsTotal" field.
func ShotsTotalNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldShotsTotal, vs...))
}

// ShotsTotalGT applies the GT predicate on the "shotsTotal" field.
func ShotsTotalGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldShotsTotal, v))
}

// ShotsTotalGTE applies the GTE predicate on the "shotsTotal" field.
func ShotsTotalGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldShotsTotal, v))
}

// ShotsTotalLT applies the LT predicate on the "shotsTotal" field.
func ShotsTotalLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldShotsTotal, v))
}

// ShotsTotalLTE applies the LTE predicate on the "shotsTotal" field.
func ShotsTotalLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldShotsTotal, v))
}

// ShotsOnEQ applies the EQ predicate on the "shotsOn" field.
func ShotsOnEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldEQ(FieldShotsOn, v))
}

// ShotsOnNEQ applies the NEQ predicate on the "shotsOn" field.
func ShotsOnNEQ(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNEQ(FieldShotsOn, v))
}

// ShotsOnIn applies the In predicate on the "shotsOn" field.
func ShotsOnIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldIn(FieldShotsOn, vs...))
}

// ShotsOnNotIn applies the NotIn predicate on the "shotsOn" field.
func ShotsOnNotIn(vs ...int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldNotIn(FieldShotsOn, vs...))
}

// ShotsOnGT applies the GT predicate on the "shotsOn" field.
func ShotsOnGT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGT(FieldShotsOn, v))
}

// ShotsOnGTE applies the GTE predicate on the "shotsOn" field.
func ShotsOnGTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldGTE(FieldShotsOn, v))
}

// ShotsOnLT applies the LT predicate on the "shotsOn" field.
func ShotsOnLT(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLT(FieldShotsOn, v))
}

// ShotsOnLTE applies the LTE predicate on the "shotsOn" field.
func ShotsOnLTE(v int) predicate.PSGoals {
	return predicate.PSGoals(sql.FieldLTE(FieldShotsOn, v))
}

// HasPlayer applies the HasEdge predicate on the "player" edge.
func HasPlayer() predicate.PSGoals {
	return predicate.PSGoals(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, PlayerTable, PlayerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPlayerWith applies the HasEdge predicate on the "player" edge with a given conditions (other predicates).
func HasPlayerWith(preds ...predicate.Player) predicate.PSGoals {
	return predicate.PSGoals(func(s *sql.Selector) {
		step := newPlayerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PSGoals) predicate.PSGoals {
	return predicate.PSGoals(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PSGoals) predicate.PSGoals {
	return predicate.PSGoals(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PSGoals) predicate.PSGoals {
	return predicate.PSGoals(sql.NotPredicates(p))
}
