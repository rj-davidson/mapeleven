// Code generated by ent, DO NOT EDIT.

package tsfixtures

import (
	"time"

	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/predicate"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldID, id))
}

// PlayedHome applies equality check predicate on the "playedHome" field. It's identical to PlayedHomeEQ.
func PlayedHome(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedHome, v))
}

// PlayedAway applies equality check predicate on the "playedAway" field. It's identical to PlayedAwayEQ.
func PlayedAway(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedAway, v))
}

// PlayedTotal applies equality check predicate on the "playedTotal" field. It's identical to PlayedTotalEQ.
func PlayedTotal(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedTotal, v))
}

// WinsHome applies equality check predicate on the "winsHome" field. It's identical to WinsHomeEQ.
func WinsHome(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsHome, v))
}

// WinsAway applies equality check predicate on the "winsAway" field. It's identical to WinsAwayEQ.
func WinsAway(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsAway, v))
}

// WinsTotal applies equality check predicate on the "winsTotal" field. It's identical to WinsTotalEQ.
func WinsTotal(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsTotal, v))
}

// DrawsHome applies equality check predicate on the "drawsHome" field. It's identical to DrawsHomeEQ.
func DrawsHome(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsHome, v))
}

// DrawsAway applies equality check predicate on the "drawsAway" field. It's identical to DrawsAwayEQ.
func DrawsAway(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsAway, v))
}

// DrawsTotal applies equality check predicate on the "drawsTotal" field. It's identical to DrawsTotalEQ.
func DrawsTotal(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsTotal, v))
}

// LossesHome applies equality check predicate on the "lossesHome" field. It's identical to LossesHomeEQ.
func LossesHome(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesHome, v))
}

// LossesAway applies equality check predicate on the "lossesAway" field. It's identical to LossesAwayEQ.
func LossesAway(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesAway, v))
}

// LossesTotal applies equality check predicate on the "lossesTotal" field. It's identical to LossesTotalEQ.
func LossesTotal(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesTotal, v))
}

// LastUpdated applies equality check predicate on the "lastUpdated" field. It's identical to LastUpdatedEQ.
func LastUpdated(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLastUpdated, v))
}

// PlayedHomeEQ applies the EQ predicate on the "playedHome" field.
func PlayedHomeEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedHome, v))
}

// PlayedHomeNEQ applies the NEQ predicate on the "playedHome" field.
func PlayedHomeNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldPlayedHome, v))
}

// PlayedHomeIn applies the In predicate on the "playedHome" field.
func PlayedHomeIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldPlayedHome, vs...))
}

// PlayedHomeNotIn applies the NotIn predicate on the "playedHome" field.
func PlayedHomeNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldPlayedHome, vs...))
}

// PlayedHomeGT applies the GT predicate on the "playedHome" field.
func PlayedHomeGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldPlayedHome, v))
}

// PlayedHomeGTE applies the GTE predicate on the "playedHome" field.
func PlayedHomeGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldPlayedHome, v))
}

// PlayedHomeLT applies the LT predicate on the "playedHome" field.
func PlayedHomeLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldPlayedHome, v))
}

// PlayedHomeLTE applies the LTE predicate on the "playedHome" field.
func PlayedHomeLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldPlayedHome, v))
}

// PlayedHomeIsNil applies the IsNil predicate on the "playedHome" field.
func PlayedHomeIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldPlayedHome))
}

// PlayedHomeNotNil applies the NotNil predicate on the "playedHome" field.
func PlayedHomeNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldPlayedHome))
}

// PlayedAwayEQ applies the EQ predicate on the "playedAway" field.
func PlayedAwayEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedAway, v))
}

// PlayedAwayNEQ applies the NEQ predicate on the "playedAway" field.
func PlayedAwayNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldPlayedAway, v))
}

// PlayedAwayIn applies the In predicate on the "playedAway" field.
func PlayedAwayIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldPlayedAway, vs...))
}

// PlayedAwayNotIn applies the NotIn predicate on the "playedAway" field.
func PlayedAwayNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldPlayedAway, vs...))
}

// PlayedAwayGT applies the GT predicate on the "playedAway" field.
func PlayedAwayGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldPlayedAway, v))
}

// PlayedAwayGTE applies the GTE predicate on the "playedAway" field.
func PlayedAwayGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldPlayedAway, v))
}

// PlayedAwayLT applies the LT predicate on the "playedAway" field.
func PlayedAwayLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldPlayedAway, v))
}

// PlayedAwayLTE applies the LTE predicate on the "playedAway" field.
func PlayedAwayLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldPlayedAway, v))
}

// PlayedAwayIsNil applies the IsNil predicate on the "playedAway" field.
func PlayedAwayIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldPlayedAway))
}

// PlayedAwayNotNil applies the NotNil predicate on the "playedAway" field.
func PlayedAwayNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldPlayedAway))
}

// PlayedTotalEQ applies the EQ predicate on the "playedTotal" field.
func PlayedTotalEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldPlayedTotal, v))
}

// PlayedTotalNEQ applies the NEQ predicate on the "playedTotal" field.
func PlayedTotalNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldPlayedTotal, v))
}

// PlayedTotalIn applies the In predicate on the "playedTotal" field.
func PlayedTotalIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldPlayedTotal, vs...))
}

// PlayedTotalNotIn applies the NotIn predicate on the "playedTotal" field.
func PlayedTotalNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldPlayedTotal, vs...))
}

// PlayedTotalGT applies the GT predicate on the "playedTotal" field.
func PlayedTotalGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldPlayedTotal, v))
}

// PlayedTotalGTE applies the GTE predicate on the "playedTotal" field.
func PlayedTotalGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldPlayedTotal, v))
}

// PlayedTotalLT applies the LT predicate on the "playedTotal" field.
func PlayedTotalLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldPlayedTotal, v))
}

// PlayedTotalLTE applies the LTE predicate on the "playedTotal" field.
func PlayedTotalLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldPlayedTotal, v))
}

// PlayedTotalIsNil applies the IsNil predicate on the "playedTotal" field.
func PlayedTotalIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldPlayedTotal))
}

// PlayedTotalNotNil applies the NotNil predicate on the "playedTotal" field.
func PlayedTotalNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldPlayedTotal))
}

// WinsHomeEQ applies the EQ predicate on the "winsHome" field.
func WinsHomeEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsHome, v))
}

// WinsHomeNEQ applies the NEQ predicate on the "winsHome" field.
func WinsHomeNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldWinsHome, v))
}

// WinsHomeIn applies the In predicate on the "winsHome" field.
func WinsHomeIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldWinsHome, vs...))
}

// WinsHomeNotIn applies the NotIn predicate on the "winsHome" field.
func WinsHomeNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldWinsHome, vs...))
}

// WinsHomeGT applies the GT predicate on the "winsHome" field.
func WinsHomeGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldWinsHome, v))
}

// WinsHomeGTE applies the GTE predicate on the "winsHome" field.
func WinsHomeGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldWinsHome, v))
}

// WinsHomeLT applies the LT predicate on the "winsHome" field.
func WinsHomeLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldWinsHome, v))
}

// WinsHomeLTE applies the LTE predicate on the "winsHome" field.
func WinsHomeLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldWinsHome, v))
}

// WinsHomeIsNil applies the IsNil predicate on the "winsHome" field.
func WinsHomeIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldWinsHome))
}

// WinsHomeNotNil applies the NotNil predicate on the "winsHome" field.
func WinsHomeNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldWinsHome))
}

// WinsAwayEQ applies the EQ predicate on the "winsAway" field.
func WinsAwayEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsAway, v))
}

// WinsAwayNEQ applies the NEQ predicate on the "winsAway" field.
func WinsAwayNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldWinsAway, v))
}

// WinsAwayIn applies the In predicate on the "winsAway" field.
func WinsAwayIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldWinsAway, vs...))
}

// WinsAwayNotIn applies the NotIn predicate on the "winsAway" field.
func WinsAwayNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldWinsAway, vs...))
}

// WinsAwayGT applies the GT predicate on the "winsAway" field.
func WinsAwayGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldWinsAway, v))
}

// WinsAwayGTE applies the GTE predicate on the "winsAway" field.
func WinsAwayGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldWinsAway, v))
}

// WinsAwayLT applies the LT predicate on the "winsAway" field.
func WinsAwayLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldWinsAway, v))
}

// WinsAwayLTE applies the LTE predicate on the "winsAway" field.
func WinsAwayLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldWinsAway, v))
}

// WinsAwayIsNil applies the IsNil predicate on the "winsAway" field.
func WinsAwayIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldWinsAway))
}

// WinsAwayNotNil applies the NotNil predicate on the "winsAway" field.
func WinsAwayNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldWinsAway))
}

// WinsTotalEQ applies the EQ predicate on the "winsTotal" field.
func WinsTotalEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldWinsTotal, v))
}

// WinsTotalNEQ applies the NEQ predicate on the "winsTotal" field.
func WinsTotalNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldWinsTotal, v))
}

// WinsTotalIn applies the In predicate on the "winsTotal" field.
func WinsTotalIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldWinsTotal, vs...))
}

// WinsTotalNotIn applies the NotIn predicate on the "winsTotal" field.
func WinsTotalNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldWinsTotal, vs...))
}

// WinsTotalGT applies the GT predicate on the "winsTotal" field.
func WinsTotalGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldWinsTotal, v))
}

// WinsTotalGTE applies the GTE predicate on the "winsTotal" field.
func WinsTotalGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldWinsTotal, v))
}

// WinsTotalLT applies the LT predicate on the "winsTotal" field.
func WinsTotalLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldWinsTotal, v))
}

// WinsTotalLTE applies the LTE predicate on the "winsTotal" field.
func WinsTotalLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldWinsTotal, v))
}

// WinsTotalIsNil applies the IsNil predicate on the "winsTotal" field.
func WinsTotalIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldWinsTotal))
}

// WinsTotalNotNil applies the NotNil predicate on the "winsTotal" field.
func WinsTotalNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldWinsTotal))
}

// DrawsHomeEQ applies the EQ predicate on the "drawsHome" field.
func DrawsHomeEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsHome, v))
}

// DrawsHomeNEQ applies the NEQ predicate on the "drawsHome" field.
func DrawsHomeNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldDrawsHome, v))
}

// DrawsHomeIn applies the In predicate on the "drawsHome" field.
func DrawsHomeIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldDrawsHome, vs...))
}

// DrawsHomeNotIn applies the NotIn predicate on the "drawsHome" field.
func DrawsHomeNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldDrawsHome, vs...))
}

// DrawsHomeGT applies the GT predicate on the "drawsHome" field.
func DrawsHomeGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldDrawsHome, v))
}

// DrawsHomeGTE applies the GTE predicate on the "drawsHome" field.
func DrawsHomeGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldDrawsHome, v))
}

// DrawsHomeLT applies the LT predicate on the "drawsHome" field.
func DrawsHomeLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldDrawsHome, v))
}

// DrawsHomeLTE applies the LTE predicate on the "drawsHome" field.
func DrawsHomeLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldDrawsHome, v))
}

// DrawsHomeIsNil applies the IsNil predicate on the "drawsHome" field.
func DrawsHomeIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldDrawsHome))
}

// DrawsHomeNotNil applies the NotNil predicate on the "drawsHome" field.
func DrawsHomeNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldDrawsHome))
}

// DrawsAwayEQ applies the EQ predicate on the "drawsAway" field.
func DrawsAwayEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsAway, v))
}

// DrawsAwayNEQ applies the NEQ predicate on the "drawsAway" field.
func DrawsAwayNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldDrawsAway, v))
}

// DrawsAwayIn applies the In predicate on the "drawsAway" field.
func DrawsAwayIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldDrawsAway, vs...))
}

// DrawsAwayNotIn applies the NotIn predicate on the "drawsAway" field.
func DrawsAwayNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldDrawsAway, vs...))
}

// DrawsAwayGT applies the GT predicate on the "drawsAway" field.
func DrawsAwayGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldDrawsAway, v))
}

// DrawsAwayGTE applies the GTE predicate on the "drawsAway" field.
func DrawsAwayGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldDrawsAway, v))
}

// DrawsAwayLT applies the LT predicate on the "drawsAway" field.
func DrawsAwayLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldDrawsAway, v))
}

// DrawsAwayLTE applies the LTE predicate on the "drawsAway" field.
func DrawsAwayLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldDrawsAway, v))
}

// DrawsAwayIsNil applies the IsNil predicate on the "drawsAway" field.
func DrawsAwayIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldDrawsAway))
}

// DrawsAwayNotNil applies the NotNil predicate on the "drawsAway" field.
func DrawsAwayNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldDrawsAway))
}

// DrawsTotalEQ applies the EQ predicate on the "drawsTotal" field.
func DrawsTotalEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldDrawsTotal, v))
}

// DrawsTotalNEQ applies the NEQ predicate on the "drawsTotal" field.
func DrawsTotalNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldDrawsTotal, v))
}

// DrawsTotalIn applies the In predicate on the "drawsTotal" field.
func DrawsTotalIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldDrawsTotal, vs...))
}

// DrawsTotalNotIn applies the NotIn predicate on the "drawsTotal" field.
func DrawsTotalNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldDrawsTotal, vs...))
}

// DrawsTotalGT applies the GT predicate on the "drawsTotal" field.
func DrawsTotalGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldDrawsTotal, v))
}

// DrawsTotalGTE applies the GTE predicate on the "drawsTotal" field.
func DrawsTotalGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldDrawsTotal, v))
}

// DrawsTotalLT applies the LT predicate on the "drawsTotal" field.
func DrawsTotalLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldDrawsTotal, v))
}

// DrawsTotalLTE applies the LTE predicate on the "drawsTotal" field.
func DrawsTotalLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldDrawsTotal, v))
}

// DrawsTotalIsNil applies the IsNil predicate on the "drawsTotal" field.
func DrawsTotalIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldDrawsTotal))
}

// DrawsTotalNotNil applies the NotNil predicate on the "drawsTotal" field.
func DrawsTotalNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldDrawsTotal))
}

// LossesHomeEQ applies the EQ predicate on the "lossesHome" field.
func LossesHomeEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesHome, v))
}

// LossesHomeNEQ applies the NEQ predicate on the "lossesHome" field.
func LossesHomeNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldLossesHome, v))
}

// LossesHomeIn applies the In predicate on the "lossesHome" field.
func LossesHomeIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldLossesHome, vs...))
}

// LossesHomeNotIn applies the NotIn predicate on the "lossesHome" field.
func LossesHomeNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldLossesHome, vs...))
}

// LossesHomeGT applies the GT predicate on the "lossesHome" field.
func LossesHomeGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldLossesHome, v))
}

// LossesHomeGTE applies the GTE predicate on the "lossesHome" field.
func LossesHomeGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldLossesHome, v))
}

// LossesHomeLT applies the LT predicate on the "lossesHome" field.
func LossesHomeLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldLossesHome, v))
}

// LossesHomeLTE applies the LTE predicate on the "lossesHome" field.
func LossesHomeLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldLossesHome, v))
}

// LossesHomeIsNil applies the IsNil predicate on the "lossesHome" field.
func LossesHomeIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldLossesHome))
}

// LossesHomeNotNil applies the NotNil predicate on the "lossesHome" field.
func LossesHomeNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldLossesHome))
}

// LossesAwayEQ applies the EQ predicate on the "lossesAway" field.
func LossesAwayEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesAway, v))
}

// LossesAwayNEQ applies the NEQ predicate on the "lossesAway" field.
func LossesAwayNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldLossesAway, v))
}

// LossesAwayIn applies the In predicate on the "lossesAway" field.
func LossesAwayIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldLossesAway, vs...))
}

// LossesAwayNotIn applies the NotIn predicate on the "lossesAway" field.
func LossesAwayNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldLossesAway, vs...))
}

// LossesAwayGT applies the GT predicate on the "lossesAway" field.
func LossesAwayGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldLossesAway, v))
}

// LossesAwayGTE applies the GTE predicate on the "lossesAway" field.
func LossesAwayGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldLossesAway, v))
}

// LossesAwayLT applies the LT predicate on the "lossesAway" field.
func LossesAwayLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldLossesAway, v))
}

// LossesAwayLTE applies the LTE predicate on the "lossesAway" field.
func LossesAwayLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldLossesAway, v))
}

// LossesAwayIsNil applies the IsNil predicate on the "lossesAway" field.
func LossesAwayIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldLossesAway))
}

// LossesAwayNotNil applies the NotNil predicate on the "lossesAway" field.
func LossesAwayNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldLossesAway))
}

// LossesTotalEQ applies the EQ predicate on the "lossesTotal" field.
func LossesTotalEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLossesTotal, v))
}

// LossesTotalNEQ applies the NEQ predicate on the "lossesTotal" field.
func LossesTotalNEQ(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldLossesTotal, v))
}

// LossesTotalIn applies the In predicate on the "lossesTotal" field.
func LossesTotalIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldLossesTotal, vs...))
}

// LossesTotalNotIn applies the NotIn predicate on the "lossesTotal" field.
func LossesTotalNotIn(vs ...int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldLossesTotal, vs...))
}

// LossesTotalGT applies the GT predicate on the "lossesTotal" field.
func LossesTotalGT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldLossesTotal, v))
}

// LossesTotalGTE applies the GTE predicate on the "lossesTotal" field.
func LossesTotalGTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldLossesTotal, v))
}

// LossesTotalLT applies the LT predicate on the "lossesTotal" field.
func LossesTotalLT(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldLossesTotal, v))
}

// LossesTotalLTE applies the LTE predicate on the "lossesTotal" field.
func LossesTotalLTE(v int) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldLossesTotal, v))
}

// LossesTotalIsNil applies the IsNil predicate on the "lossesTotal" field.
func LossesTotalIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldLossesTotal))
}

// LossesTotalNotNil applies the NotNil predicate on the "lossesTotal" field.
func LossesTotalNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldLossesTotal))
}

// LastUpdatedEQ applies the EQ predicate on the "lastUpdated" field.
func LastUpdatedEQ(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldEQ(FieldLastUpdated, v))
}

// LastUpdatedNEQ applies the NEQ predicate on the "lastUpdated" field.
func LastUpdatedNEQ(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNEQ(FieldLastUpdated, v))
}

// LastUpdatedIn applies the In predicate on the "lastUpdated" field.
func LastUpdatedIn(vs ...time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIn(FieldLastUpdated, vs...))
}

// LastUpdatedNotIn applies the NotIn predicate on the "lastUpdated" field.
func LastUpdatedNotIn(vs ...time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotIn(FieldLastUpdated, vs...))
}

// LastUpdatedGT applies the GT predicate on the "lastUpdated" field.
func LastUpdatedGT(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGT(FieldLastUpdated, v))
}

// LastUpdatedGTE applies the GTE predicate on the "lastUpdated" field.
func LastUpdatedGTE(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldGTE(FieldLastUpdated, v))
}

// LastUpdatedLT applies the LT predicate on the "lastUpdated" field.
func LastUpdatedLT(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLT(FieldLastUpdated, v))
}

// LastUpdatedLTE applies the LTE predicate on the "lastUpdated" field.
func LastUpdatedLTE(v time.Time) predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldLTE(FieldLastUpdated, v))
}

// LastUpdatedIsNil applies the IsNil predicate on the "lastUpdated" field.
func LastUpdatedIsNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldIsNull(FieldLastUpdated))
}

// LastUpdatedNotNil applies the NotNil predicate on the "lastUpdated" field.
func LastUpdatedNotNil() predicate.TSFixtures {
	return predicate.TSFixtures(sql.FieldNotNull(FieldLastUpdated))
}

// HasTeam applies the HasEdge predicate on the "team" edge.
func HasTeam() predicate.TSFixtures {
	return predicate.TSFixtures(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, TeamTable, TeamColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTeamWith applies the HasEdge predicate on the "team" edge with a given conditions (other predicates).
func HasTeamWith(preds ...predicate.Team) predicate.TSFixtures {
	return predicate.TSFixtures(func(s *sql.Selector) {
		step := newTeamStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TSFixtures) predicate.TSFixtures {
	return predicate.TSFixtures(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TSFixtures) predicate.TSFixtures {
	return predicate.TSFixtures(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TSFixtures) predicate.TSFixtures {
	return predicate.TSFixtures(sql.NotPredicates(p))
}
