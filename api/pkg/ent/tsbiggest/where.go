// Code generated by ent, DO NOT EDIT.

package tsbiggest

import (
	"time"

	"capstone-cs.eng.utah.edu/mapeleven/mapeleven/pkg/ent/predicate"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldID, id))
}

// StreakWins applies equality check predicate on the "streakWins" field. It's identical to StreakWinsEQ.
func StreakWins(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakWins, v))
}

// StreakLosses applies equality check predicate on the "streakLosses" field. It's identical to StreakLossesEQ.
func StreakLosses(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakLosses, v))
}

// StreakDraws applies equality check predicate on the "streakDraws" field. It's identical to StreakDrawsEQ.
func StreakDraws(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakDraws, v))
}

// WinsHome applies equality check predicate on the "winsHome" field. It's identical to WinsHomeEQ.
func WinsHome(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldWinsHome, v))
}

// WinsAway applies equality check predicate on the "winsAway" field. It's identical to WinsAwayEQ.
func WinsAway(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldWinsAway, v))
}

// LossesHome applies equality check predicate on the "lossesHome" field. It's identical to LossesHomeEQ.
func LossesHome(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLossesHome, v))
}

// LossesAway applies equality check predicate on the "lossesAway" field. It's identical to LossesAwayEQ.
func LossesAway(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLossesAway, v))
}

// GoalsForHome applies equality check predicate on the "goalsForHome" field. It's identical to GoalsForHomeEQ.
func GoalsForHome(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsForHome, v))
}

// GoalsForAway applies equality check predicate on the "goalsForAway" field. It's identical to GoalsForAwayEQ.
func GoalsForAway(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsForAway, v))
}

// GoalsAgainstHome applies equality check predicate on the "goalsAgainstHome" field. It's identical to GoalsAgainstHomeEQ.
func GoalsAgainstHome(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsAgainstHome, v))
}

// GoalsAgainstAway applies equality check predicate on the "goalsAgainstAway" field. It's identical to GoalsAgainstAwayEQ.
func GoalsAgainstAway(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsAgainstAway, v))
}

// LastUpdated applies equality check predicate on the "lastUpdated" field. It's identical to LastUpdatedEQ.
func LastUpdated(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLastUpdated, v))
}

// StreakWinsEQ applies the EQ predicate on the "streakWins" field.
func StreakWinsEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakWins, v))
}

// StreakWinsNEQ applies the NEQ predicate on the "streakWins" field.
func StreakWinsNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldStreakWins, v))
}

// StreakWinsIn applies the In predicate on the "streakWins" field.
func StreakWinsIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldStreakWins, vs...))
}

// StreakWinsNotIn applies the NotIn predicate on the "streakWins" field.
func StreakWinsNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldStreakWins, vs...))
}

// StreakWinsGT applies the GT predicate on the "streakWins" field.
func StreakWinsGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldStreakWins, v))
}

// StreakWinsGTE applies the GTE predicate on the "streakWins" field.
func StreakWinsGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldStreakWins, v))
}

// StreakWinsLT applies the LT predicate on the "streakWins" field.
func StreakWinsLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldStreakWins, v))
}

// StreakWinsLTE applies the LTE predicate on the "streakWins" field.
func StreakWinsLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldStreakWins, v))
}

// StreakWinsIsNil applies the IsNil predicate on the "streakWins" field.
func StreakWinsIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldStreakWins))
}

// StreakWinsNotNil applies the NotNil predicate on the "streakWins" field.
func StreakWinsNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldStreakWins))
}

// StreakLossesEQ applies the EQ predicate on the "streakLosses" field.
func StreakLossesEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakLosses, v))
}

// StreakLossesNEQ applies the NEQ predicate on the "streakLosses" field.
func StreakLossesNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldStreakLosses, v))
}

// StreakLossesIn applies the In predicate on the "streakLosses" field.
func StreakLossesIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldStreakLosses, vs...))
}

// StreakLossesNotIn applies the NotIn predicate on the "streakLosses" field.
func StreakLossesNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldStreakLosses, vs...))
}

// StreakLossesGT applies the GT predicate on the "streakLosses" field.
func StreakLossesGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldStreakLosses, v))
}

// StreakLossesGTE applies the GTE predicate on the "streakLosses" field.
func StreakLossesGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldStreakLosses, v))
}

// StreakLossesLT applies the LT predicate on the "streakLosses" field.
func StreakLossesLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldStreakLosses, v))
}

// StreakLossesLTE applies the LTE predicate on the "streakLosses" field.
func StreakLossesLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldStreakLosses, v))
}

// StreakLossesIsNil applies the IsNil predicate on the "streakLosses" field.
func StreakLossesIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldStreakLosses))
}

// StreakLossesNotNil applies the NotNil predicate on the "streakLosses" field.
func StreakLossesNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldStreakLosses))
}

// StreakDrawsEQ applies the EQ predicate on the "streakDraws" field.
func StreakDrawsEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldStreakDraws, v))
}

// StreakDrawsNEQ applies the NEQ predicate on the "streakDraws" field.
func StreakDrawsNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldStreakDraws, v))
}

// StreakDrawsIn applies the In predicate on the "streakDraws" field.
func StreakDrawsIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldStreakDraws, vs...))
}

// StreakDrawsNotIn applies the NotIn predicate on the "streakDraws" field.
func StreakDrawsNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldStreakDraws, vs...))
}

// StreakDrawsGT applies the GT predicate on the "streakDraws" field.
func StreakDrawsGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldStreakDraws, v))
}

// StreakDrawsGTE applies the GTE predicate on the "streakDraws" field.
func StreakDrawsGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldStreakDraws, v))
}

// StreakDrawsLT applies the LT predicate on the "streakDraws" field.
func StreakDrawsLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldStreakDraws, v))
}

// StreakDrawsLTE applies the LTE predicate on the "streakDraws" field.
func StreakDrawsLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldStreakDraws, v))
}

// StreakDrawsIsNil applies the IsNil predicate on the "streakDraws" field.
func StreakDrawsIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldStreakDraws))
}

// StreakDrawsNotNil applies the NotNil predicate on the "streakDraws" field.
func StreakDrawsNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldStreakDraws))
}

// WinsHomeEQ applies the EQ predicate on the "winsHome" field.
func WinsHomeEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldWinsHome, v))
}

// WinsHomeNEQ applies the NEQ predicate on the "winsHome" field.
func WinsHomeNEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldWinsHome, v))
}

// WinsHomeIn applies the In predicate on the "winsHome" field.
func WinsHomeIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldWinsHome, vs...))
}

// WinsHomeNotIn applies the NotIn predicate on the "winsHome" field.
func WinsHomeNotIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldWinsHome, vs...))
}

// WinsHomeGT applies the GT predicate on the "winsHome" field.
func WinsHomeGT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldWinsHome, v))
}

// WinsHomeGTE applies the GTE predicate on the "winsHome" field.
func WinsHomeGTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldWinsHome, v))
}

// WinsHomeLT applies the LT predicate on the "winsHome" field.
func WinsHomeLT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldWinsHome, v))
}

// WinsHomeLTE applies the LTE predicate on the "winsHome" field.
func WinsHomeLTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldWinsHome, v))
}

// WinsHomeContains applies the Contains predicate on the "winsHome" field.
func WinsHomeContains(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContains(FieldWinsHome, v))
}

// WinsHomeHasPrefix applies the HasPrefix predicate on the "winsHome" field.
func WinsHomeHasPrefix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasPrefix(FieldWinsHome, v))
}

// WinsHomeHasSuffix applies the HasSuffix predicate on the "winsHome" field.
func WinsHomeHasSuffix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasSuffix(FieldWinsHome, v))
}

// WinsHomeIsNil applies the IsNil predicate on the "winsHome" field.
func WinsHomeIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldWinsHome))
}

// WinsHomeNotNil applies the NotNil predicate on the "winsHome" field.
func WinsHomeNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldWinsHome))
}

// WinsHomeEqualFold applies the EqualFold predicate on the "winsHome" field.
func WinsHomeEqualFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEqualFold(FieldWinsHome, v))
}

// WinsHomeContainsFold applies the ContainsFold predicate on the "winsHome" field.
func WinsHomeContainsFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContainsFold(FieldWinsHome, v))
}

// WinsAwayEQ applies the EQ predicate on the "winsAway" field.
func WinsAwayEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldWinsAway, v))
}

// WinsAwayNEQ applies the NEQ predicate on the "winsAway" field.
func WinsAwayNEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldWinsAway, v))
}

// WinsAwayIn applies the In predicate on the "winsAway" field.
func WinsAwayIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldWinsAway, vs...))
}

// WinsAwayNotIn applies the NotIn predicate on the "winsAway" field.
func WinsAwayNotIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldWinsAway, vs...))
}

// WinsAwayGT applies the GT predicate on the "winsAway" field.
func WinsAwayGT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldWinsAway, v))
}

// WinsAwayGTE applies the GTE predicate on the "winsAway" field.
func WinsAwayGTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldWinsAway, v))
}

// WinsAwayLT applies the LT predicate on the "winsAway" field.
func WinsAwayLT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldWinsAway, v))
}

// WinsAwayLTE applies the LTE predicate on the "winsAway" field.
func WinsAwayLTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldWinsAway, v))
}

// WinsAwayContains applies the Contains predicate on the "winsAway" field.
func WinsAwayContains(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContains(FieldWinsAway, v))
}

// WinsAwayHasPrefix applies the HasPrefix predicate on the "winsAway" field.
func WinsAwayHasPrefix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasPrefix(FieldWinsAway, v))
}

// WinsAwayHasSuffix applies the HasSuffix predicate on the "winsAway" field.
func WinsAwayHasSuffix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasSuffix(FieldWinsAway, v))
}

// WinsAwayIsNil applies the IsNil predicate on the "winsAway" field.
func WinsAwayIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldWinsAway))
}

// WinsAwayNotNil applies the NotNil predicate on the "winsAway" field.
func WinsAwayNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldWinsAway))
}

// WinsAwayEqualFold applies the EqualFold predicate on the "winsAway" field.
func WinsAwayEqualFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEqualFold(FieldWinsAway, v))
}

// WinsAwayContainsFold applies the ContainsFold predicate on the "winsAway" field.
func WinsAwayContainsFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContainsFold(FieldWinsAway, v))
}

// LossesHomeEQ applies the EQ predicate on the "lossesHome" field.
func LossesHomeEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLossesHome, v))
}

// LossesHomeNEQ applies the NEQ predicate on the "lossesHome" field.
func LossesHomeNEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldLossesHome, v))
}

// LossesHomeIn applies the In predicate on the "lossesHome" field.
func LossesHomeIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldLossesHome, vs...))
}

// LossesHomeNotIn applies the NotIn predicate on the "lossesHome" field.
func LossesHomeNotIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldLossesHome, vs...))
}

// LossesHomeGT applies the GT predicate on the "lossesHome" field.
func LossesHomeGT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldLossesHome, v))
}

// LossesHomeGTE applies the GTE predicate on the "lossesHome" field.
func LossesHomeGTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldLossesHome, v))
}

// LossesHomeLT applies the LT predicate on the "lossesHome" field.
func LossesHomeLT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldLossesHome, v))
}

// LossesHomeLTE applies the LTE predicate on the "lossesHome" field.
func LossesHomeLTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldLossesHome, v))
}

// LossesHomeContains applies the Contains predicate on the "lossesHome" field.
func LossesHomeContains(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContains(FieldLossesHome, v))
}

// LossesHomeHasPrefix applies the HasPrefix predicate on the "lossesHome" field.
func LossesHomeHasPrefix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasPrefix(FieldLossesHome, v))
}

// LossesHomeHasSuffix applies the HasSuffix predicate on the "lossesHome" field.
func LossesHomeHasSuffix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasSuffix(FieldLossesHome, v))
}

// LossesHomeIsNil applies the IsNil predicate on the "lossesHome" field.
func LossesHomeIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldLossesHome))
}

// LossesHomeNotNil applies the NotNil predicate on the "lossesHome" field.
func LossesHomeNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldLossesHome))
}

// LossesHomeEqualFold applies the EqualFold predicate on the "lossesHome" field.
func LossesHomeEqualFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEqualFold(FieldLossesHome, v))
}

// LossesHomeContainsFold applies the ContainsFold predicate on the "lossesHome" field.
func LossesHomeContainsFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContainsFold(FieldLossesHome, v))
}

// LossesAwayEQ applies the EQ predicate on the "lossesAway" field.
func LossesAwayEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLossesAway, v))
}

// LossesAwayNEQ applies the NEQ predicate on the "lossesAway" field.
func LossesAwayNEQ(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldLossesAway, v))
}

// LossesAwayIn applies the In predicate on the "lossesAway" field.
func LossesAwayIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldLossesAway, vs...))
}

// LossesAwayNotIn applies the NotIn predicate on the "lossesAway" field.
func LossesAwayNotIn(vs ...string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldLossesAway, vs...))
}

// LossesAwayGT applies the GT predicate on the "lossesAway" field.
func LossesAwayGT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldLossesAway, v))
}

// LossesAwayGTE applies the GTE predicate on the "lossesAway" field.
func LossesAwayGTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldLossesAway, v))
}

// LossesAwayLT applies the LT predicate on the "lossesAway" field.
func LossesAwayLT(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldLossesAway, v))
}

// LossesAwayLTE applies the LTE predicate on the "lossesAway" field.
func LossesAwayLTE(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldLossesAway, v))
}

// LossesAwayContains applies the Contains predicate on the "lossesAway" field.
func LossesAwayContains(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContains(FieldLossesAway, v))
}

// LossesAwayHasPrefix applies the HasPrefix predicate on the "lossesAway" field.
func LossesAwayHasPrefix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasPrefix(FieldLossesAway, v))
}

// LossesAwayHasSuffix applies the HasSuffix predicate on the "lossesAway" field.
func LossesAwayHasSuffix(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldHasSuffix(FieldLossesAway, v))
}

// LossesAwayIsNil applies the IsNil predicate on the "lossesAway" field.
func LossesAwayIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldLossesAway))
}

// LossesAwayNotNil applies the NotNil predicate on the "lossesAway" field.
func LossesAwayNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldLossesAway))
}

// LossesAwayEqualFold applies the EqualFold predicate on the "lossesAway" field.
func LossesAwayEqualFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEqualFold(FieldLossesAway, v))
}

// LossesAwayContainsFold applies the ContainsFold predicate on the "lossesAway" field.
func LossesAwayContainsFold(v string) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldContainsFold(FieldLossesAway, v))
}

// GoalsForHomeEQ applies the EQ predicate on the "goalsForHome" field.
func GoalsForHomeEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsForHome, v))
}

// GoalsForHomeNEQ applies the NEQ predicate on the "goalsForHome" field.
func GoalsForHomeNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldGoalsForHome, v))
}

// GoalsForHomeIn applies the In predicate on the "goalsForHome" field.
func GoalsForHomeIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldGoalsForHome, vs...))
}

// GoalsForHomeNotIn applies the NotIn predicate on the "goalsForHome" field.
func GoalsForHomeNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldGoalsForHome, vs...))
}

// GoalsForHomeGT applies the GT predicate on the "goalsForHome" field.
func GoalsForHomeGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldGoalsForHome, v))
}

// GoalsForHomeGTE applies the GTE predicate on the "goalsForHome" field.
func GoalsForHomeGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldGoalsForHome, v))
}

// GoalsForHomeLT applies the LT predicate on the "goalsForHome" field.
func GoalsForHomeLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldGoalsForHome, v))
}

// GoalsForHomeLTE applies the LTE predicate on the "goalsForHome" field.
func GoalsForHomeLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldGoalsForHome, v))
}

// GoalsForHomeIsNil applies the IsNil predicate on the "goalsForHome" field.
func GoalsForHomeIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldGoalsForHome))
}

// GoalsForHomeNotNil applies the NotNil predicate on the "goalsForHome" field.
func GoalsForHomeNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldGoalsForHome))
}

// GoalsForAwayEQ applies the EQ predicate on the "goalsForAway" field.
func GoalsForAwayEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsForAway, v))
}

// GoalsForAwayNEQ applies the NEQ predicate on the "goalsForAway" field.
func GoalsForAwayNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldGoalsForAway, v))
}

// GoalsForAwayIn applies the In predicate on the "goalsForAway" field.
func GoalsForAwayIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldGoalsForAway, vs...))
}

// GoalsForAwayNotIn applies the NotIn predicate on the "goalsForAway" field.
func GoalsForAwayNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldGoalsForAway, vs...))
}

// GoalsForAwayGT applies the GT predicate on the "goalsForAway" field.
func GoalsForAwayGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldGoalsForAway, v))
}

// GoalsForAwayGTE applies the GTE predicate on the "goalsForAway" field.
func GoalsForAwayGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldGoalsForAway, v))
}

// GoalsForAwayLT applies the LT predicate on the "goalsForAway" field.
func GoalsForAwayLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldGoalsForAway, v))
}

// GoalsForAwayLTE applies the LTE predicate on the "goalsForAway" field.
func GoalsForAwayLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldGoalsForAway, v))
}

// GoalsForAwayIsNil applies the IsNil predicate on the "goalsForAway" field.
func GoalsForAwayIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldGoalsForAway))
}

// GoalsForAwayNotNil applies the NotNil predicate on the "goalsForAway" field.
func GoalsForAwayNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldGoalsForAway))
}

// GoalsAgainstHomeEQ applies the EQ predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeNEQ applies the NEQ predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeIn applies the In predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldGoalsAgainstHome, vs...))
}

// GoalsAgainstHomeNotIn applies the NotIn predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldGoalsAgainstHome, vs...))
}

// GoalsAgainstHomeGT applies the GT predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeGTE applies the GTE predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeLT applies the LT predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeLTE applies the LTE predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldGoalsAgainstHome, v))
}

// GoalsAgainstHomeIsNil applies the IsNil predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldGoalsAgainstHome))
}

// GoalsAgainstHomeNotNil applies the NotNil predicate on the "goalsAgainstHome" field.
func GoalsAgainstHomeNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldGoalsAgainstHome))
}

// GoalsAgainstAwayEQ applies the EQ predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayNEQ applies the NEQ predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayNEQ(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayIn applies the In predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldGoalsAgainstAway, vs...))
}

// GoalsAgainstAwayNotIn applies the NotIn predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayNotIn(vs ...int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldGoalsAgainstAway, vs...))
}

// GoalsAgainstAwayGT applies the GT predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayGT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayGTE applies the GTE predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayGTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayLT applies the LT predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayLT(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayLTE applies the LTE predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayLTE(v int) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldGoalsAgainstAway, v))
}

// GoalsAgainstAwayIsNil applies the IsNil predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldGoalsAgainstAway))
}

// GoalsAgainstAwayNotNil applies the NotNil predicate on the "goalsAgainstAway" field.
func GoalsAgainstAwayNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldGoalsAgainstAway))
}

// LastUpdatedEQ applies the EQ predicate on the "lastUpdated" field.
func LastUpdatedEQ(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldEQ(FieldLastUpdated, v))
}

// LastUpdatedNEQ applies the NEQ predicate on the "lastUpdated" field.
func LastUpdatedNEQ(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNEQ(FieldLastUpdated, v))
}

// LastUpdatedIn applies the In predicate on the "lastUpdated" field.
func LastUpdatedIn(vs ...time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIn(FieldLastUpdated, vs...))
}

// LastUpdatedNotIn applies the NotIn predicate on the "lastUpdated" field.
func LastUpdatedNotIn(vs ...time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotIn(FieldLastUpdated, vs...))
}

// LastUpdatedGT applies the GT predicate on the "lastUpdated" field.
func LastUpdatedGT(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGT(FieldLastUpdated, v))
}

// LastUpdatedGTE applies the GTE predicate on the "lastUpdated" field.
func LastUpdatedGTE(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldGTE(FieldLastUpdated, v))
}

// LastUpdatedLT applies the LT predicate on the "lastUpdated" field.
func LastUpdatedLT(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLT(FieldLastUpdated, v))
}

// LastUpdatedLTE applies the LTE predicate on the "lastUpdated" field.
func LastUpdatedLTE(v time.Time) predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldLTE(FieldLastUpdated, v))
}

// LastUpdatedIsNil applies the IsNil predicate on the "lastUpdated" field.
func LastUpdatedIsNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldIsNull(FieldLastUpdated))
}

// LastUpdatedNotNil applies the NotNil predicate on the "lastUpdated" field.
func LastUpdatedNotNil() predicate.TSBiggest {
	return predicate.TSBiggest(sql.FieldNotNull(FieldLastUpdated))
}

// HasTeam applies the HasEdge predicate on the "team" edge.
func HasTeam() predicate.TSBiggest {
	return predicate.TSBiggest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, TeamTable, TeamColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTeamWith applies the HasEdge predicate on the "team" edge with a given conditions (other predicates).
func HasTeamWith(preds ...predicate.Team) predicate.TSBiggest {
	return predicate.TSBiggest(func(s *sql.Selector) {
		step := newTeamStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TSBiggest) predicate.TSBiggest {
	return predicate.TSBiggest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TSBiggest) predicate.TSBiggest {
	return predicate.TSBiggest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TSBiggest) predicate.TSBiggest {
	return predicate.TSBiggest(sql.NotPredicates(p))
}
